openapi: 3.0.1
info:
  title: Access Token
  description: Access Tokens are required to execute all API actions, you can use
    this resource to obtain one. The authority of the bearer token; the actions it
    can execute, is determined by the associated Merchant ID, Accounts and Permissions
    of the app used to create it.
  version: 2020 04 10
servers:
- url: https://apis.sandbox.globalpay.com/ucp
security:
- bearerAuth: []
paths:
  /accesstoken:
    post:
      tags:
      - Create Access Token
      summary: Create a bearer access token.
      description: 'Using your app credentials, send a request to create a bearer
        access token that can be used to execute subsequent API actions. The actions 
        that the token can execute are determined by the permissions the app has.
        For more information on API authentication and creating access 
        tokens, <a href="/authentication">please refer to the API Definitions</a>.'
      parameters:
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-04-10"
      - name: Accept
        in: header
        description: Format of the expected response message.
        schema:
          type: string
          default: application/json
      - name: Accept-Encoding
        in: header
        description: Compression algorithms that can be accepted in the response.
        schema:
          type: string
          default: gzip
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/request'
        required: false
      responses:
        200:
          description: OK
          headers:
            Content-type:
              description: Format of the message.
              schema:
                type: string
                default: "application/json"
            X-GP-Version:
              description: Indicates the version of the GP-API for this message.
              schema:
                type: string
                default: "2020-04-10"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'errors.yaml#/components/schemas/errorhttp400'
        401:
          description: Not Authenticated
          content:
            application/json:
              schema:
                $ref: 'errors.yaml#/components/schemas/errorhttp401'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'errors.yaml#/components/schemas/errorhttp403'
        404:
          description: Resource Not Found
          content: {}
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'errors.yaml#/components/schemas/errorhttp500'
        501:
          description: Not implemented
          content:
            application/json:
              schema:
                $ref: 'errors.yaml#/components/schemas/errorhttp501'
        502:
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: 'errors.yaml#/components/schemas/errorhttp502'
        504:
          description: Timeout
          content:
            application/json:
              schema:
                $ref: 'errors.yaml#/components/schemas/errorhttp504'
      x-codegen-request-body-name: request



components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    request:
      required:
      - app_id
      - grant_type
      - nonce
      - secret
      type: object
      properties:
        app_id:
          type: string
          description: The id of the app that was used to create the token.
          example: i9R0byBBor6RqTQNj3g4MuVBwH5rd7yR
        nonce:
          type: string
          description: A unique random value included while creating the secret.
          example: random_string
        secret:
          type: string
          description: A unique string created using the nonce and app-key. This value
            is used to further authenticate the request. Created as follows - SHA512(NONCE.APP-KEY).
          example: e776ce1d9e94d5072ee132258e446cd92668d7c28b2e475a345319b475ba601956c16e3983926ce279db6301d78b7f47cfb729e41b4169814e373f0a0bf38716
        grant_type:
          type: string
          description: Indicates the type of access being requested.
          example: client_credentials
        seconds_to_expire:
          type: number
          description: |
            The time left in seconds before the token expires.
          example: ""
        interval_to_expire:
          type: string
          description: |
            The time interval set for when the token will expire.
          example: WEEK
          enum:
          - WEEK
          - DAY
          - 12_HOURS
          - 6_HOURS
          - 3_HOURS
          - 1_HOUR
          - 30_MINUTES
          - 10_MINUTES
          - 5_MINUTES
    response:
      type: object
      properties:
        token:
          type: string
          description: The access token that can be used to executed API actions.
            A unique identifier generated by Global Payments to identify the merchant.
          example: N3sHC8I6G3SGs2YRBDnDUS3Hx2ET
        type:
          type: string
          description: The type of token created.
          example: Bearer
        scope:
          $ref: '#/components/schemas/scope'
        app_id:
          type: string
          description: The app id that was used to create the token.
          example: i9R0byBBor6RqTQNj3g4MuVBwH5rd7yR
        app_name:
          type: string
          description: The name of the app the user gave to the application.
          example: demo_app
        time_created:
          type: string
          description: Global Payments time indicating when the token was created.
          example: 2020-05-03T21:23:39.718Z
        seconds_to_expire:
          type: number
          description: |
            The time left in seconds before the token will expire.
          example: 3599.0
        interval_to_expire:
          type: string
          description: |
            The time interval set for when the token will expire.
          example: 1_HOUR
          enum:
          - WEEK
          - DAY
          - 12_HOURS
          - 6_HOURS
          - 3_HOURS
          - 1_HOUR
          - 30_MINUTES
          - 10_MINUTES
          - 5_MINUTES
        email:
          type: string
          description: 'Email registered with the application that was used to access
            this token. '
          example: james.mason@example.com
    scope:
      type: object
      properties:
        merchant_id:
          type: string
          description: A unique identifier for the merchant set by Global Payments.
          example: MER_c4c0df11039c48a9b63701adeaa296c3
        merchant_name:
          type: string
          description: A meaningful label for the merchant set by Global Payments.
          example: Sandbox_merchant_2
        accounts:
          $ref: '#/components/schemas/accounts'
    accounts:
      type: array
      items:
        type: object
        properties:
          account_id:
            type: string
            description: A unique identifier for the merchant account set by Global
              Payments.
            example: TRA_6716058969854a48b33347043ff8225f
          account_name:
            type: string
            description: A meaningful label for the merchant account set by Global
              Payments.
            example: Transaction_Processing
          permissions:
            type: array
            items:
              $ref: '#/components/schemas/accounts'
   
    Permissions:
      type: string
      description: The list of the permissions the token has authority to execute via the API. Each permission indicates a Resource, HTTP Verb and Action the token can execute.
      enum:
        - TRN_POST_AUTHORIZE
        - TRN_POST_CAPTURE
        - TRN_POST_REVERSE
        - TRN_POST_REFUND
        - TRN_POST_ADJUSTMENT





