openapi: '3.0.3'
info:
  title: Data Dictionary
  contact:
    name: API Integrations
    url: 'https://developer.globalpay.com/?gp-api=true'
    email: api.integrations@globalpay.com
  version: 2020 10 22
servers:
  - url: 'https://apis.sandbox.globalpay.com/ucp'
    description: Sandbox Environment
  - url: 'https://apis.globalpay.com/ucp'
    description: Production Environment
paths: {}
components:
  schemas: ## Schema Section

    link.rel:
      type: string
      description: Describes the relationship the associated link href value has to the current resource.
        * `SELF` - indicates a link to the current resource.
        * `ACCOUNTS` - indicates a link to the current resource's list of accounts.
      enum:
        - SELF
        - ACCOUNTS
      minLength: 0
      maxLength: 50
    
    link.href:
      type: string
      description: A href link to the resources or resource actions as indicated in the corresponding rel value.
      example: 'https://apis.globalpay.com/ucp/merchants/MER_c4c0df11039c48a9b63701adeaa296c3'
      minLength: 0
      maxLength: 2048

    ####A
    access_token:
      type: string
      description: The access token that can be used to executed API actions.
        A unique identifier generated by Global Payments to identify the merchant.
      example: '8iZjQyEQeriGfqtA1V5wVDagEMAI'
      minLength: 1
      maxLength: 50

    access_token.type:
      type: string
      description: The type of token created.
      example: 'Bearer'
      minLength: 1
      maxLength: 50

    account_id:
      type: string
      description: A unique identifier for the merchant account set by Global
        Payments.
      example: 'TRA_6716058969854a48b33347043ff8225f'
      minLength: 1
      maxLength: 50

    account_name:
      type: string
      description: A meaningful label for the merchant account set by Global
        Payments.
      example: 'Transaction_Processing'
      minLength: 1
      maxLength: 50

    settement_reporting.account_name:
      type: string
      description: A meaningful label for the merchant account set by Global
        Payments.
      example: 'Settlement Reporting'
      minLength: 1
      maxLength: 50

    action.id:
      type: string
      description: A unique identifier generated by Global Payments to identify
            an action.
      example: 'ACT_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d'
      minLength: 1
      maxLength: 50
    
    ### Hello
    authentication.id:
      type: string
      description: A unique identifier generated by Global Payments to identify
            an authentication.
      example: 'AUT_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d'
      minLength: 1
      maxLength: 50
    
    verification.id:
      type: string
      description: A unique identifier generated by Global Payments to identify
            a vertification
      example: 'VER_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d'
      minLength: 1
      maxLength: 50
    
    aggregation_model:
      type: string
      description: Indicates how a merchant's payment processing activity across Sales, Refunds, Disputes and Fees is structured for a Deposit. Activity can be aggregated into one daily amount or all activity separately funded via different deposits.
      example: 'NET'
      enum:
      - NET
      - TRANSACTIONS-DISPUTES-FEES
      - SEPARATE
    
    app_id:
        type: string
        description: The id of the app that was used to create the token.
        example: 'i9R0byBBor6RqTQNj3g4MuVBwH5rd7yR'
        minLength: 1
        maxLength: 50

    app_name:
      type: string
      description: The name of the app the user gave to the application.
      example: 'demo_app'
      minLength: 1
      maxLength: 50

    authentication.reference:
      type: string
      description:  Merchant defined field to uniquely reference the authentication attempt.
      example: 'My reference 2'
      minLength: 1
      maxLength: 50

    authentication.value:
      type: string
      description: A CNP Card transaction's 3D Secure Customer Authentication Verification Value that is used to determine and validate the degree of authentication executed for this transaction.
      example: AAACBUGDZYYYIgGFGYNlAAAAAAA=
      minLength: 0
      maxLength: 50

    authentication.preference:
      type: string
      description: Indicates whether a challenge is requested for this transaction. The Issuer may override whatever preference is specified in this field.
       NO_PREFERENCE - No preference as to whether the customer is challenged
       NO_CHALLENGE_REQUESTED - Preference is for the customer not be challenged
       CHALLENGE_PREFERRED - Preference is for the customer to be challenged.
       CHALLENGE_MANDATED - A challenge is required for the transaction to be authorized due to local/regional mandates or other variables.
       NO_CHALLENGE_REQUESTED_TRANSACTION_RISK_ANALYSIS_PERFORMED
       NO_CHALLENGE_REQUESTED_DATA_SHARE_ONLY
       NO_CHALLENGE_REQUESTED_SCA_ALREADY_PERFORMED
       NO_CHALLENGE_REQUESTED_WHITELIST
       CHALLENGE_REQUESTED_PROMPT_FOR_WHITELIST
      enum:
      - NO_PREFERENCE
      - NO_CHALLENGE_REQUESTED
      - CHALLENGE_PREFERRED
      - CHALLENGE_MANDATED
      - NO_CHALLENGE_REQUESTED_TRANSACTION_RISK_ANALYSIS_PERFORMED
      - NO_CHALLENGE_REQUESTED_DATA_SHARE_ONLY
      - NO_CHALLENGE_REQUESTED_SCA_ALREADY_PERFORMED
      - NO_CHALLENGE_REQUESTED_WHITELIST
      - CHALLENGE_REQUESTED_PROMPT_FOR_WHITELIST

    authentication.source:
      type: string
      description: Indicates the type of channel used to initiate the transaction. 
      enum:
      - BROWSER
      - MERCHANT_INITIATED
      - MOBILE_SDK

    three_ds.authentication_source:
      type: string
      description: Indicates the type of channel used to initiate the transaction. 
      enum:
      - BROWSER
      - MERCHANT_INITIATED
      - MOBILE_SDK

    three_ds.authentication_request_type:
      type: string
      description: Indicates the type of channel used to initiate the transaction.
      enum:
      - PAYMENT_TRANSACTION
      - RECURRING_TRANSACTION
      - INSTALMENT_TRANSACTION
      - ADD_CARD
      - MAINTAIN_CARD
      - CARDHOLDER_VERIFICATION



    

    transaction.authorization_mode:
      type: string
      description: Indicates if the merchant would like to authorize for an amount less than the intended amount.
      example: 'PARTIAL'
      default: 'WHOLE'
      enum:
      - PARTIAL
      - WHOLE
      - ESTIMATED
      - FINAL
      - PARTIAL_FINAL
    
    #### B

    bank.code:
      type: string
      description: The local identifier code for the bank.
      example: 'james.mason@example.com'
      minLength: 0
      maxLength: 50
    
    batch_id:
      type: string
      description: A Global Payments created reference that uniquely identifies the batch.
      example: 'BAT_234234234'
      minLength: 0
      maxLength: 50

    bank_transfer.number:
      type: string
      description: The number or reference for the payer's bank account.
      example: '23452423'
      minLength: 0
      maxLength: 50

    bank_transfer.number_type:
      type: string
      description: The type of bank account associated with the payer's bank account.
      example: 'SAVING'
      enum:
      - CHECKING
      - SAVING
      - CREDIT

    bank_transfer.check_reference:
      type: string
      description: The number or reference for the check
      example: '23452423'
      minLength: 0
      maxLength: 15

    bank_transfer.sec_code:
      type: string
      description: >
       Indicates how the transaction was authorized by the merchant.
       * `CCD` - Cash Concentration or Disbursement - Can be either a credit or debit application where funds are wither distributed or consolidated between corporate entities. 
       * `POP` - Point of Sale Entry - Point of sale debit applications non-shared (POS) environment. These transactions are most often initiated by the consumer via a plastic access card. This is only support for normal ACH transactions
       * `PPD` - Prearranged Payment and Deposits - used to credit or debit a consumer account. Popularity used for payroll direct deposits and pre-authorized bill payments.
       * `TEL` - Telephone-Initiated Entry - Used for the origination of a single entry debit transaction to a consumer's account pursuant to a verbal authorization obtained from the consumer via the telephone.
       * `WEB` - Internet (Web)-Initiated Entry - Used for the origination of debit entries (either Single or Recurring Entry) to a consumer's account pursuant to a to an authorization that is obtained from the Receiver via the Internet.
      example: 'CCD'
      enum:
      - CCD
      - POP
      - PPD
      - TEL
      - WEB

 

    
    #### C
    transaction.channel:
      type: string
      description: Describes whether the transaction was processed in a face to
            face(CP) scenario or a Customer Not Present (CNP) scenario.
        * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk.
        * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
      example: 'CNP'                    
      enum:
      - CP
      - CNP
    
    account.channels: ##REVISIT ## enums to external docs ##
      type: array
      description: A list of channels account is configured for.
      items:
         $ref: 'data_dictionary.v1.yaml#/components/schemas/transaction.channel'
    


    transaction.capture_mode:
      type: string
      description: Indicates whether the transaction is to be captured automatically, later or later using more than 1 partial capture.
        * `AUTO` - If a transaction is authorized, funds will exchange between the payer and merchant automatically and as soon as possible.
        * `LATER` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically and will require a subsequent separate action to capture that transaction and start the funding process. Only one successful capture is permitted.
        * `MULTIPLE` - If a transaction is authorized, funds will not exchange between the payer and merchant automatically. One or more subsequent separate capture actions are required to capture that transaction in parts and start the funding process for the part captured. One or many successful capture are permitted once the total amount captured is within a range of the original authorized amount.
      default: 'AUTO'
      enum:
      - AUTO
      - LATER
      - MULTIPLE
    
    transaction.capture_sequence:
      type: string
      description: Indicates whether the request is the first,a subsequent or the last capture request when capturing multiple amounts separatelt 
      example: 'FIRST'
      enum:
      - FIRST
      - SUBSEQUENT
      - LAST


    transaction.total_capture_count:
      type: integer
      description: Indicates the total or expected total of captures that will executed against a transaction flagged as being captured multiple times.



    country: ##REVISIT ## enums to external docs ##
      type: string
      description: The country in ISO-3166-1(alpha-2 code) format.
      example: 'US'
      enum: 
        - ISO-3166-1(alpha-2 code)
        - US

    account.countries: ##REVISIT ## enums to external docs ##
      type: array
      description: A list of countries in ISO-3166-1(alpha-2 code) format an account is configured for.
      items:
         $ref: 'data_dictionary.v1.yaml#/components/schemas/country'
    
      
    phone.subscriber_number:
      type: string
      description: The phone number.


    count:
      type: number
      description: The total number of items.
      example: 123

    currency: ##REVISIT ## enums to external docs ##
      type: string
      description: The currency of the amount in ISO-4217(alpha-3)
      example: 'USD'
    
    account.currencies: ##REVISIT ## enums to external docs ##
      type: array
      description: A list of currencies in ISO-4217(alpha-3) format an account is configured for.
      items:
         $ref: 'data_dictionary.v1.yaml#/components/schemas/currency'

    #### D 
    

    deposit.amount:
      type: string
      description: The amount of the Deposit that affects the merchant's bank account. It is always represented in the lowest denomiation of the related currency.
      example: '134999'


    #### E
    eci:
      type: string
      description: An indication of the degree of the authentication and liability shift obtained for this transaction.
      example: '5'
      minLength: 0
      maxLength: 50

    email:
      type: string
      description: 'Email registered with the application that was used to access this token. '
      example: 'james.mason@example.com'
      minLength: 1
      maxLength: 50
    
    merchant.email:
      type: string
      description: 'Primary email configured with the merchant.'
      example: 'merchant@example.com'
      minLength: 1
      maxLength: 50

    payment_method: 
      type: string
      description: The payment methods available to create transactions with.
        * `CARD` - Debit, credit, charge or prepaid; local or international, consumer or corporate payment method based on a 12 to 16 digital number, expiry date and security code. 
        * `DIGITAL_WALLET` - ApplePay or Pay With Google digital wallet built using scheme tokenization and cards payment method rails.
        * `BANK_TRANSFER` - Payment method based on the transfer of fund using a routing number, sort code or BIC and the payer's bank account number or IBAN.
        * `APM` - Broad category of alternative and local payment methods usualy specific to a country or region.
        * `PAYPAL` - Popular wallet used to easily pay with securely stored stored payment methods on the payer's Paypal account.
      enum: 
        - CARD
        - DIGITAL_WALLET
        - BANK_TRANSFER
        - APM
        - PAYPAL

      minLength: 1
      maxLength: 50

    account.payment_methods:
      type: array
      description: A list of payment methods an account is configured for.
      items:
         $ref: 'data_dictionary.v1.yaml#/components/schemas/payment_method'


    payment_method.entry_mode:
      type: string
      description: Indicates how the payment method information was obtained by the Merchant for this transaction.
        * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail.
        * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser.
        * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only.
        * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip.
        * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information.
        * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device.
        * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a cardon or near a device to exchange card information.
        * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information  
        * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone.
        * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
     
      example: 'ECOM'                  
      enum:
      - MOTO
      - ECOM
      - IN_APP
      - CHIP
      - SWIPE
      - MANUAL
      - PHONE
      - MAIL
      - CONTACTLESS_CHIP
      - CONTACTLESS_SWIPE
      minLength: 1
      maxLength: 50

    #### F
    payment_method.first_name:
      type: string
      description: Specify the first name of the owner of the payment method.
      example: 'James'
      minLength: 0
      maxLength: 50

    payment_method.last_name:
      type: string
      description: Specify the surname of the owner of the payment method.
      example: 'Mason'
      minLength: 0
      maxLength: 50

    payment_method.name:
      type: string
      description: The full name of the owner of the payment method.
      example: 'James Mason'
      minLength: 0
      maxLength: 100

    
    funding_type:
      type: string
      description: Indicates if the amount relates to a Debit or Credit to the merchant's bank account.
      example: 'CREDIT'
      enum:
      - DEBIT
      - CREDIT

    from_time_created:
      description: The start time to search for in a range, using the resource time_created value.
      type: string
      format: date
      example: '2021-02-01'
    
    time_last_updated:
      description: The date and time the resource object was last changed.
      type: string
      format: date-time


    from_time_last_updated:
      description: The start time to search for in a range, using time_last_updated value.
      type: string
      format: date
      example: '2021-02-01'

    to_time_last_updated:
      description: The end time to search for in a range, using time_last_updated value.
      type: string
      format: date
      

    dispute.from_stage_time_created:
      description: The start time to search for in a range, using stage_time_created value.
      type: string
      format: date
      example: '2021-02-01'

    dispute.to_stage_time_created:
      description: The end time to search for in a range, using stage_time_created value.
      type: string
      format: date
      
      
    
   
      
    #### G
    grant_type:
      type: string
      description: Indicates the type of access being requested.
      enum: [client_credentials]
      example: 'client_credentials'

    #### I
    id:
      type: string
      description: A unique identifier for the object created by Global Payments. The first 3 characters identifies the resource an id relates to.
      minLength: 1
      maxLength: 50

    transaction.initiator:
      type: string
      description: Indicates whether the Merchant or the Payer initiated the creation of a transaction.
        * `PAYER` - The transaction was initated by the customer who is paying the merchant.
        * `MERCHANT` - The transaction was initated by the merchant, who is getting paid by the payer.
      enum:
      - PAYER
      - MERCHANT

    interval_to_expire:
      type: string
      description: |
        The time interval set for when the token will expire.
      enum:
      - WEEK
      - DAY
      - 12_HOURS
      - 6_HOURS
      - 3_HOURS
      - 1_HOUR
      - 30_MINUTES
      - 10_MINUTES
      - 5_MINUTES

    ip_address:
      type: string
      description: Indicates the source IP Address of the system used to create the transaction.
      example: '123.123.123.123'
      minLength: 0
      maxLength: 50

    
    #### L
    language:
      type: string
      description: Indicates the language the transaction was executed in. In
        the format ISO-639-1 (alpha-2) or ISO-639-1 (alpha-2)_ISO-3166(alpha-2)
      example: 'fr_CA'
      enum:
        - ISO-639(alpha-2)
        - fr
        - ISO-639(alpha-2)_ISO-3166(alpha-2)
        - fr_CA
      
    #### M
    masked_account_number_last4:
      type: string
      description: The last 4 characters of the local reference for a bank account number.
      minLength: 1
      maxLength: 50
    
    masked_number_last4:
      type: string
      description: The last 4 characters of the local reference for a bank account number.
      minLength: 1
      maxLength: 50
    
    merchant_id:
      type: string
      description: A unique identifier for the merchant set by Global Payments.
      example: MER_c4c0df11039c48a9b63701adeaa296c3
      minLength: 1
      maxLength: 50
    
    merchant_name:
      type: string
      description: A meaningful label for the merchant set by Global Payments.
      example: Sandbox_merchant_2
      minLength: 1
      maxLength: 50
    
    message:
      type: string
      description: Result message from the third party e.g. card brand
      example: 'DECLINED'
      minLength: 1
      maxLength: 50

    #### N    
    nonce:
      type: string
      description: A unique random value included while creating the secret.
      example: 'random_string'
      minLength: 1
      maxLength: 50
    
    #### O
    order.reference:
      type: string
      description: Merchant defined field common to all transactions that are part of the same order.
      example: 'INV#88547'
      minLength: 0
      maxLength: 50

    order.time_created_reference:
      type: string
      description: Merchant defined time the order was created.
      minLength: 0
      maxLength: 50

    order.amount:
      type: string
      description: The total amount of the order.
      example: '11099'

      
    order.address_match_indicator:
      type: string
      description: Indicates whether the shipping address matches the billing address.
      enum:
        - YES
        - NO

    address.line_1:
      type: string
      description: First line of the address.
      minLength: 0
      maxLength: 50

    address.line_2:
      type: string
      description: Second line of the address.
      minLength: 0
      maxLength: 50

    address.line_3:
      type: string
      description: Third  line of the address.
      minLength: 0
      maxLength: 50

    address.city:
      type: string
      description: Merchant defined field common to all transactions that are part of the same order.
      example: 'INV#88547'
      minLength: 0
      maxLength: 50

    address.postal_code:
      type: string
      description: The city or town of the address.
      minLength: 0
      maxLength: 50

    address.state:
      type: string
      description: The status or region of the address
      minLength: 0
      maxLength: 50
      
    address.country:
      type: string
      description: The county of the address.
      minLength: 0
      maxLength: 50

    order.gift_card_count:
      type: number
      description: The total number of prepaid or gift cards purchased.
      minimum: 0
      maximum: 500

    order.gift_card_amount:
      type: string
      description: The amount of the gift card. 
      minLength: 0
      maxLength: 3
    
    order.gift_card_currency:
      $ref: 'data_dictionary.v1.yaml#/components/schemas/currency'

    order.delivery_email:
      type: string
      description: For ELECTRONIC_DELIVERY, the email address to which the merchandise was delivered. The field must be submitted in the form name@host.domain.
      minLength: 0
      maxLength: 50


    order.delivery_timeframe:
      type: string
      description: Indicates the delivery timeframe for the order.
      enum:
      - ELECTRONIC_DELIVERY
      - SAME_DAY
      - OVERNIGHT
      - TWO_DAYS_OR_MORE


    order.shipping_method:
      type: string
      description: Indicates shipping method chosen for the transaction. Must be speific to this transaction, not generally to the merchant. If one or more items are included in the sale, use the Shipping Indicator code for the physical goods. If all the goods are digital, use the Shipping Method code that describes the most expensive item.
      enum:
      - BILLING_ADDRESS
      - ANOTHER_VERIFIED_ADDRESS UNVERIFIED_ADDRESS
      - SHIP_TO_STORE
      - DIGITAL_GOODS
      - TRAVEL_AND_EVENT_TICKETS
      - OTHER
      

    order.shipping_name_matches_cardholder_name:
      type: string
      description: Indicates whether the account customer name matches the shipping address name.
     


    order.preorder_indicator:
      type: string
      description: Indicates whether the customer is paying for merchandise that will be available at a future date.
      enum:
      - FIRST_TIME_ORDER
      - REORDER


    order.preorder_availability_date:
      type: string
      format: date
      example: '2020-11-11'
      description: In the case of a preorder; the expected date when the merchandise will be available
      


    order.category:
      type: string
      description: The type of order being authenticated.
      enum:
      - GOODS_SERVICE_PURCHASE
      - CHECK_ACCEPTANCE
      - ACCOUNT_FUNDING
      - QUASI_CASH_TRANSACTION
      - PREPAID_ACTIVATION_AND_LOAD

    payer.reference:
      type: string
      description: An integrator's reference to the payer.
    
    payer.name:
      type: string
      description: The full name of the payer.
      example: 'James Mason'
      minLength: 0
      maxLength: 100 

    payer.date_of_birth:
      type: string
      description: The date of birth of the payer
      format: date
      example: '2021-01-31'
      minLength: 0
      maxLength: 100

    payer.account_age:
      type: string
      description: Length of time the customer has had an account with the merchant.
      enum:
      - NO_ACCOUNT
      - THIS_TRANSACTION
      - LESS_THAN_THIRTY_DAYS
      - THIRTY_TO_SIXTY_DAYS
      - MORE_THEN_SIXTY_DAYS
      
    payer.account_creation_date:
      type: string
      format: date
      description:  Date the customer opened their account with the merchant.
      example: '2020-11-11'

    payer.account_change_date:
      type: string
      format: date
      description:  Date the customer's account with the merchant was last changed. For example, if the billing or shipping details changed, new payment account or new users added.
      example: '2020-11-11'

    payer.account_change_indicator:
      type: string
      description: Length of time since the account has changed.
      enum:
      - THIS_TRANSACTION
      - LESS_THAN_THIRTY_DAYS
      - THIRTY_TO_SIXTY_DAYS
      - MORE_THEN_SIXTY_DAYS

    payer.account_password_change_date:
      type: string
      format: date
      description: Date the customer's account with the merchant had a password change or account reset.
      example: '2020-11-11'


    payer.account_password_change_indicator:
      type: string
      description: Length of time since the customer's account with the merchant has had a password change or account reset.
      enum:
      - NO_CHANGE
      - THIS_TRANSACTION
      - LESS_THAN_THIRTY_DAYS
      - THIRTY_TO_SIXTY_DAYS
      - MORE_THEN_SIXTY_DAYS  

    payer.landline_phone:
      type: string
      description: The landline phone number.

    payer.mobile_phone:
      type: string
      description: The mobile phone number.

    payer.home_phone.country_code:
      type: string
      description: The country code of the phone number.

    payer.home_phone.subscriber_number:
      type: string
      description: The phone number.

    payer.work_phone.countrycode:
      type: string
      description: The country code of the phone number.

    payer.work_phone.subscriber_number:
      type: string
      description: The phone number.

    payer.payment_account_creation_date:
      type: string
      format: date
      description: Date the payment account was associated with the customer's account.
      example: '2020-11-11'

    payer.payment_account_age_indicator:
      type: string
      description: Length of time the customer has had an account with the merchant.
      enum:
      - NO_ACCOUNT
      - THIS_TRANSACTION
      - LESS_THAN_THIRTY_DAYS
      - THIRTY_TO_SIXTY_DAYS.
      - MORE_THEN_SIXTY_DAYS

    payer.suspicious_account_activity:
      type: string
      description: Indicates whether there has been suspicious activity on this customer's account, including fraudulent activity. 
      enum:
      - SUSPICIOUS_ACTIVITY
      - NO_SUSPICIOUS_ACTIVITY

    payer.purchases_last_6months_count:
      type: string
      description: Number of purchases with this customer's account during the previous six months.

    payer.transactions_last_24hours_count:
      type: string
      description: Number of transactions (successful and abandoned) for this customer account with the merchant in the previous 24 hours.

    payer.transaction_last_year_count:
      type: string
      description: umber of transactions (successful and abandoned) for this customer account with the merchant in the previous year.

    payer.provision_attempt_last_24hours_count:
      type: string
      description: Number of Add Card attempts in the last 24 hours.

    payer.shipping_address_time_created_reference:
      type: string
      format: date
      description: Date the shipping address was first used with the merchant.
      example: '2020-11-11'

    payer.shipping_address_creation_indicator:
      type: string
      description: When the shipping address was first used with the merchant.
      enum:
      - THIS_TRANSACTION
      - LESS_THAN_THIRTY_DAYS
      - THIRTY_TO_SIXTY_DAYS
      - MORE_THEN_SIXTY_DAYS

    payer_prior_three_ds_authentication_data.authentication_method:
      type: string
      description: Method used by the customer previously to authenticate. 
      enum:
      - FRICTIONLESS_AUTHENTICATION
      - CHALLENGE_OCCURRED
      - AVS_VERIFIED
      - OTHER_ISSUER_METHOD

    # Rename to consistent field name acs_trans_ref
    payer_prior_three_ds_authentication_data.acs_transaction_reference: #
      type: string
      description: ACS Transaction ID for a prior 3DS authenticated transaction.


    payer_prior_three_ds_authentication_data.authentication_timestamp:
      type: string
      format: date-time
      description: Date and time in UTC of the prior customer authentication. Minimum of 3 microseconds precision, can be up to 6. Must also include timezone.

    payer_prior_three_ds_authentication_data.authentication_data:
      type: string
      description: Data that documents and supports a specific authentication process.

    recurring_authorization_data.max_number_of_instalments:
      type: string
      description: Indicates the maximum number of authorizations permitted for instalment payments.

    recurring_authorization_data.frequency:
      type: string
      description: The minimum number of days between recurring authorizations.

    recurring_authorization_data.expiry_date:
      type: string
      format: date
      description: Date after which no further recurring authorizations shall be performed.

    payer_login_data.authentication_data:
      type: string
      description: NOT IN USE

    payer_login_data.authentication_timestamp:
      type: string
      format: date-time
      description: The timestamp of the authentication with the merchant. Minimum of 3 microseconds precision, can be up to 6. Must also include timezone.

    payer_login_data.authentication_type: 
      type: string
      description: Method used by the customer previously to authenticate with the merchant. 
      enum:
      - NOT_AUTHENTICATED
      - MERCHANT_SYSTEM_AUTHENTICATION
      - FEDERATED_ID_AUTHENTICATION
      - ISSUER_CREDENTIAL_AUTHENTICATION
      - THIRD_PARTY_AUTHENTICATION
      - FIDO_AUTHENTICATION

    browser.accept_header:
      type: string
      description: HTTP accept headers as sent by the browser. Allowed characters are [a-zA-Z0-9-/,+;.*=␣]
      minLength: 0
      maxLength: 2048

    browser.color_depth:
      type: string
      description: Browser color depth. 
      enum:
      - ONE_BIT
      - TWO_BITS
      - FOUR_BITS
      - EIGHT_BITS
      - FIFTEEN_BITS
      - SIXTEEN_BITS
      - TWENTY_FOUR_BITS
      - THIRTY_TWO_BITS
      - FORTY_EIGHT_BITS

    browser.ip:
      type: string
      description: IP address returned by the browser. IPv4 and IPv6 accepted. Allowed characters are [a-fA-F0-9:]
      minLength: 0
      maxLength: 39

    browser.java_enabled:
      type: string
      description: Whether the browser can execute Java.
      enum:
      - YES
      - NO

    browser.javascript_enabled:
      type: string
      description: Whether the browser can execute Javascript.
      enum:
      - YES
      - NO

    browser.language:
      type: string
      description: Browser Language. Allowed characters  [a-zA-Z0-9-]
      maxLength: 8

    browser.screen_height:
      type: string
      description: Total height of the customer's screen in pixels.

    browser.screen_width:
      type: string
      description: Total width of the customer's screen in pixels.

    browser.challenge_window_size:
      type: string
      description: Dimensions of the challenge window that has been displayed to the customer. The ACS shall reply with content that is formatted to appropriately.
      enum:
        - WINDOWED_250X400
        - WINDOWED_390X400
        - WINDOWED_500X600
        - WINDOWED_600X400
        - FULL_SCREEN

    browser.timezone:
      type: string
      description: Time difference between UTC time and the customer's browser local time, in minutes.
      maxLength: 5


    browser.user_agent:
      type: string
      description: Exact content of the HTTP user-agent header sent by the browser. Allowed characters are [a-zA-Z0-9/-_.␣():;',"{}]
      maxLength: 2048


    #### P
    pagination.total_record_count:
      type: number
      description: The total number of records across all pages for the search filter. When searching for a collection of resoures, this is returned on the first page only and when the date range is a month or less.
      example: 3412
        
    pagination.current_page_size:
      type: number
      description: The total number of records returned on the current page. If current_page_size is less than the page_size using in the querystring then this is the final page for that search.
      example: 3412

    pagination.page:
      description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
      maximum: 1000
      minimum: 1
      type: number
      default: 1    
    
    pagination.page_size:
      description: The total number of objects to return in a single page for that list.
      maximum: 1000
      minimum: 1
      type: number
      default: 5
    
    pagination.order_by:
      description: 'The value to order the entire list by. '
      type: string
      enum:
      - TIME_CREATED
    
    pagination.order:
      description: The direction of the ordering of the entire list, ASC or DESC
      type: string
      enum:
      - ASC
      - DESC
     
    payment_method.id:
      type: string
      description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system.
      example: 'PMT_31087d9c-e68c-4389-9f13-39378e166ea5'
      maxLength: 50
    
    payment_method.reference:
      type: string
      description:  Merchant defined field to uniquely reference the stored payment method.
      example: 'CustABC_Card_1'
      minLength: 1
      maxLength: 50

    payment_method.usage_mode:
      type: string
      description:  Indicates whether to store the card for a short or long periond of time. SINGLE indicates store the payment_method details for the duration of the checkout, less than 10 minutes. MULTIPLE (Default) stores the details until the Merchant deletes them.
       * `SINGLE` - The payment token is temporary and will be removed once a transaction is executed or after a short period of time.
       * `MULTIPLE` -  The payment token is permanent and can be used to create many transactions.      
      enum:
      - SINGLE
      - MULTIPLE
      default: MULTIPLE
      minLength: 1
      maxLength: 50
    
    payment_method.storage_mode:
      type: string
      description:  Indicates whether to store the card as part of a transaction.
        * `ALWAYS` -  The card information is always stored irrespective of whether the payment method authorization was successful or not.
        * `ON_SUCCESS` - The card information is only storedif the payment method authorization was successful.
      enum:
      - ALWAYS
      - ON_SUCCESS
      minLength: 1
      maxLength: 50

    payment_method.narrative:
      type: string
      description: Contains the value a merchant wishes to appear on the payer's payment method statement for this transaction
      minLength: 1
      maxLength: 50

    


    permissions:
      type: array
      items:
        type: string
        description: The list of the permissions the access token has or will have once created. This indicates the scope of authority a specific access token has.
        example: TRN_POST_Authorize   

    account.permissions:
      type: array
      items:
        type: string
        description: The list of the permissions an account is configured for.
   

    #### R
    result:
      type: string
      description: Result code from the third party e.g. card brand
      minLength: 1
      maxLength: 50

    result_code:
      type: string
      description: The result of the action executed.
      enum:
        - SUCCESS
        - DECLINE
      minLength: 1
      maxLength: 50
   
    
    #### S
    seconds_to_expire:
      type: integer
      description: |
        The time left in seconds before the token expires.
      maximum: 604799
      example: 604799

    secret:
      type: string
      description: A unique string created using the nonce and app-key. This value
        is used to further authenticate the request. Created as follows - SHA512(NONCE.APP-KEY).
      example: e776ce1d9e94d5072ee132258e446cd92668d7c28b2e475a345319b475ba601956c16e3983926ce279db6301d78b7f47cfb729e41b4169814e373f0a0bf38716
      minLength: 1
      maxLength: 128

    status: ##REVISIT ## enums to external docs ##
      type: string
      description: Indicates where a resource object is in it's lifecylce.
      example: 'FUNDED'

    transaction.status: ##REVISIT ## enums to external docs ##
      type: string
      description: Indicates where a transaction is in its lifecycle.
        * `INITIATED` - A Transaction has been successfully initiated. An update on its status is expected via a separate asynchronous notification to a webhook.
        * `PENDING` - A Transaction has been sent to the payment method provider and are waiting for an authorization result.
        * `PREAUTHORIZED` - A Transaction has been successfully authorized but a follow up capture request is required to initiate the funding cycle.
        * `CAPTURED` - A Transaction has been successfully authorized and captured. The merchant will get paid for this transaction if it remains in this status. 
        * `REVERSED` - A Transaction that had a status of PREAUTHORIZED or CAPTURED has subsequently been reversed which voids/cancels a transaction before it is funded and attempts to restore the payer's spending limit for that payment method.
        * `DECLINED` - A Transaction where the payment method provider declined to authorize the transfer of fund between the payer and the merchant.
        * `FUNDED` - A Transaction where the funds have transferred between payer and merchant as expected.
        * `REJECTED` - A Transaction where the funds are expected to transfer between payer and merchant but the transfer was rejected during the funding process. This rarely happens but when it does it is usually addressed by Global Payments operations .
       
      enum:
      - INITIATED
      - PREAUTHORIZED
      - CAPTURED
      - REVERSED
      - DECLINED
      - FUNDED
      - REJECTED
     
      minLength: 0
      maxLength: 50

    deposit.status: ##REVISIT ## enums to external docs ##
      type: string
      description: Indicates where a deposit is in its lifecycle.
        * `FUNDED` - A Deposit where the funds have transferred between payer and merchant as expected.
        * `SPLIT_FUNDING` - A Deposit where the funds are split between the merchant and a third party. This is in accordance with an pre-arranged agreement between Global Payments, the merchant and the third party.
        * `IRREG` - A Deposit where the transactions are facilitated by Global Payments but funding to merchant bank accounts are executed by a third party.
        * `DELAYED` - A Deposit where the funds are being held by Global Payments. This funds will be paid to merchant in full in accordance with a schedule communicated with the merchant.
        * `RESERVED` - A Deposit where the funds are being held wholly or partially by Global Payments. This funds will be paid to merchants upon review or in accordance with the merchant service agreement.
        * `RELEASED` - A Deposit where the funds were reserved but are now released and funded to the merchants bank account.
       
      enum:
      - FUNDED
      - SPLIT_FUNDING
      - IRREG
      - DELAYED
      - RESERVED
      - RELEASED
      
      minLength: 0
      maxLength: 50


    entity.status: #
      type: string
      description: Indicates where a configured entity on the Global Payments system is in it's lifecycle.
        * `ACTIVE` - The configured entity is able to execute related API actions.
        * `INACTIVE` - The configured entity is not able to execute related API actions as its status has been set to inactive.
      enum:
      - ACTIVE
      - INACTIVE
      minLength: 0
      maxLength: 50    

    merchant.status: ##REVISIT ## enums to external docs ##
      type: string
      description: Indicates where a merchant is in it's lifecycle.
        * `ACTIVE` - A Merchant is able to execute API actions against its active accounts
        * `INACTIVE` - A Merchant is unable to execute any API actions.
        
      enum:
      - ACTIVE
      - INACTIVE
      minLength: 0
      maxLength: 50    

    payment_method.status: ##REVISIT ## enums to external docs ##
      type: string
      description: Indicates where a resource object is in it's lifecylce.
      example: 'ACTIVE'
    
    verification.status: ##REVISIT ## enums to external docs ##
      type: string
      description: Indicates where a resource object is in it's lifecylce.
      example: 'VERIFIED'

    site_reference:
      type: string
      description: A merchant defined reference for the location that created the transaction.
      minLength: 0
      maxLength: 50

    system.mid:
      type: string
      description: Merchant Identifier from Global Payments system for some features.
      minLength: 1
      maxLength: 50
        
    system.tid:
      type: string
      description: Terminal Identifier from Global Payments system for some features.
      minLength: 1
      maxLength: 50
    
    system.hierarchy:
      type: string
      description: Identifies the location of a merchant  within the
            merchant's corporate hierarchical structure. 
      minLength: 1
      maxLength: 50
    
    system.name:
      type: string
      description: The merchant name that is associated with the merchant.
      example: 'MERCHANT ABC INC.'
      minLength: 1
      maxLength: 100
    
    system.dba:
      type: string
      description: The alternate name the merchant may be known as.
      example: 'MERCHANT XYZ INC.'
      minLength: 1
      maxLength: 100
      

    #### T
    three_ds.message_version:
      type: string
      description: Indicates the version of 3DS 
      example: '1.0.0'
      minLength: 0
      maxLength: 50
    
    
    three_ds.eci:
      type: string
      description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is determined during the 3D Secure process.
      example: '5'
      minLength: 0
      maxLength: 2
    
    three_ds.value:
      type: string
      description: The authentication value created as part of the 3D Secure process.
      minLength: 0
      maxLength: 50
    
    three_ds.value_result:
      type: string
      description: The result of the three_ds value validation by the brands or issuing bank.
      minLength: 0
      maxLength: 50

    three_ds.server_trans_reference:
      type: string
      description: The reference created by the 3DSecure provider to identify the specific authentication attempt.
      minLength: 0
      maxLength: 50

    three_ds.exempt_status:
      type: string
      description: Indicates if any exemptions apply to this transaction.
      minLength: 0
      maxLength: 50
      enum:
        - LOW_VALUE
        - TRANSACTION_RISK_ANALYSIS
        - TRUSTED_MERCHANT
        - SECURE_CORPORATE_PAYMENT
        - SCA_DELEGATION
   
    three_ds.ds_trans_reference:
      type: string
      description: The reference created by the 3DSecure Directory Server to identify the specific authentication attempt.
      minLength: 0
      maxLength: 50
    
    three_ds.acs_trans_reference:
      type: string
      description: Unique transaction identifier assigned by the ACS.
      minLength: 0
      maxLength: 50

    three_ds.acs_reference_number:
      type: string
      description: Reference Number assigned by the ACS.
      minLength: 0
      maxLength: 50

    three_ds.ds_protocol_version_start:
      type: string
      description: The version range supported by the Directory Server (Card Scheme).
      minLength: 0
      maxLength: 50
      
    three_ds.ds_protocol_version_end:
      type: string
      description: The version range supported by the Directory Server (Card Scheme).
      minLength: 0
      maxLength: 50
      
    three_ds.acs_protocol_version_start:
      type: string
      description: The version range supported by the Access Control Server (Issuer).
      minLength: 0
      maxLength: 50
      
    three_ds.acs_protocol_version_end:
      type: string
      description: The version range supported by the Access Control Server (Issuer).
      minLength: 0
      maxLength: 50
      
    three_ds.liability_shift:
      type: string
      description: Indicates if the merchant has achieved a liabiliy shift.
      enum:
      - YES
      - NO
      - UNSURE
      minLength: 0
      maxLength: 50
      
    three_ds.enrolled_status:
      type: string
      description: Indicates if payer is enrolled for 3DS.
      enum:
      - ENROLLED
      - NOT_ENROLLED
      - NOT_ENROLLED_ATTEMPT
      - UNABLE_TO_VERIFY
      minLength: 0
      maxLength: 50
      
    three_ds.acs_info_indicator:
      type: string
      description: Identifies the 3D Secure 2 features that the ACS supports, for example, Whitelisting or Decoupled Authentication.
      enum:
      - NOT_AVAILABLE
      - AUTHENTICATION_AVAILABLE_AT_ACS
      - ATTEMPTS_SUPPORTED_BY_ACS
      - DECOUPLED_AUTHENTICATION_SUPPORTED
      - WHITELISTING_SUPPORTED
      - SCHEME_INFO_INDICATOR_##
      minLength: 0
      maxLength: 50
      
    three_ds.challenge_model:
      type: string
      description: Indicates the type of authentication method the Issuer will use to challenge the customer. 
      enum:
      - STATIC_CHALLENGE
      - DYNAMIC_CHALLENGE
      - OUT_OF_BAND_CHALLENGE
      - DECOUPLED
      minLength: 0
      maxLength: 50

    three_ds.challenge_completion_indicator:
      type: string
      description: Indicates whether a transaction qualifies as an authenticated transaction or account verification. YES = Authentication/Account Verification Successful. NO = Not Authenticated/Account Not Verified; Transaction denied.
      enum:
      - YES
      - NO
      minLength: 0
      maxLength: 50
      
    three_ds.challenge_status:
      type: string
      description: Indicates whether a challenge is required due to local/regional mandates or another variable.
      enum:
      - MANDATED
      - NOT_MANDATED
      - UNKNOWN
    
      minLength: 0
      maxLength: 50
      
    three_ds.redirect_url:
      type: string
      description: URL to redirect the payer from the merchant's system to the payment method's system. This is used to determine or execute a challenge to the payer.

    three_ds.acs_challenge_request_url:
      type: string
      description: The ACS URL that the payer is redirect to execute a challenge to the payer.
      
    three_ds.message_type:
      type: string
      description: Indicates what is the authentication value format used.
      enum:
        - PAREQ
        - CREQ
      minLength: 0
      maxLength: 50
      
    three_ds.challenge_value:
      type: string
      description: The value to be submitted in the request to the redirect_url when challenging an authentication. It is Base64url encoded and must be sent to the ACS.
      minLength: 0
      maxLength: 50
      
    three_ds.method_url:
      type: string
      description: The URL to facilitate the ACS gathering device data. If the ACS does not support this functionality, this field will not be returned.

      
    method_data.encoded_method_data:
      type: string
      description: JSON object containing the Base64Url encoded string, made up of the integator's method_notification_url and the server_trans_ref which must be sent to the Method URL.
    
    authentication.merchant_contact_url:
      type: string
      description: The URL of the merchant's website or customer care site. Should provide contact information for use in the event of a problem.

     
      minLength: 0
      maxLength: 50

    authentication.message_category:
      type: string
      description: Indicates the reason category the authentication was initiated. PAYMENT_AUTHENTICATION or NON_PAYMENT_AUTHENTICATION - non payment activity such as adding or maintaining cards or card verification (OTB).
      enum:
        - PAYMENT_AUTHENTICATION
        - NON_PAYMENT_AUTHENTICATION
      minLength: 0
      maxLength: 50


    three_ds.method_url_completion_status:
      type: string
      description: Indicates whether the 3DS Method was completed successfully. 
      enum:
        - YES
        - NO
        - UNAVAILABLE
      minLength: 0
      maxLength: 50

    authentication.status:
      type: string
      description: Indicates where the authentication is in its lifecycle
      enum:
        - AVAILABLE
        - NOT_ENROLLED
        - CHALLENGE_REQUIRED
        - SUCCESS_AUTHENTICATED
        - SUCCESS_ATTEMPT_MADE
        - NOT_AUTHENTICATED
        - FAILED

      minLength: 0
      maxLength: 50

    authentication.status_reason:
      type: string
      description: Provides information on why the authentication status field has the specified value.
      enum:
        - CARD_AUTHENTICATION_FAILED
        - UNKNOWN_DEVICE
        - UNSUPPORTED_DEVICE
        - EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT
        - EXPIRED_CARD
        - INVALID_CARD_NUMBER
        - INVALID_TRANSACTION
        - NO_CARD_RECORD
        - SECURITY_FAILURE
        - STOLEN_CARD
        - SUSPECTED_FRAUD
        - TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER
        - CARDHOLDER_NOT_ENROLLED_IN_SERVICE
        - TRANSACTION_TIMED_OUT_AT_THE_ACS
        - LOW_CONFIDENCE
        - MEDIUM_CONFIDENCE
        - HIGH_CONFIDENCE
        - VERY_HIGH_CONFIDENCE
        - EXCEEDS_ACS_MAXIMUM_CHALLENGES
        - NON_PAYMENT_TRANSACTION_NOT_SUPPORTED
        - THREERI_TRANSACTION_NOT_SUPPORTED
        - ACS_TECHNICAL_ISSUE
        - DECOUPLED_AUTHENTICATION_REQUIRED_BY_ACS
        - DECOUPLED_MAX_EXPIRY_TIME_EXCEEDED
        - INSUFFICIENT_TIME_TO_AUTHENTICATE
        - AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED
        - SCHEME_STATUS_REASON##

      minLength: 0
      maxLength: 50

   
    three_ds.cardholder_response_info:
      type: string
      description: Optional text provided by the ACS/Issuer to customer during a Frictionless transaction that was not authenticated. For example, a customer care phone number to call.
      minLength: 0
    
    three_ds.acs_transaction_status:
      type: string
      description: Indicates whether a transaction qualifies as an authenticated transaction or account verification. 
      enum:
        - AUTHENTICATION_SUCCESSFUL
        - AUTHENTICATION_FAILED
        - AUTHENTICATION_COULD_NOT_BE_PERFORMED
        - AUTHENTICATION_ATTEMPTED_BUT_NOT_SUCCESSFUL
        - CHALLENGE_REQUIRED
        - AUTHENTICATION_ISSUER_REJECTED
        - DECOUPLED_AUTHENTICATION_CONFIRMED
        - CHALLENGE_PREFERENCE_ACKNOWLEDGED_INFORMATIONAL_ONLY

    three_ds.session_data:
      type: string
      description: An integrator defined object used to store and send data to the ACS that is also returned back to the integrator.

    three_ds.session_data_field_name:
      type: string
      description: Indicates the fieldname to populate data with when redirecting to the 3DS ACS. The data will be returned by the ACS in the same fieldname when redirecting back to the notofication challenge result URL.
        * `MD` - Use this fieldname in the redirect to the ACS 3DS 1.
        * `threeDSSessionData` - Use this fieldname in the redirect to the ACS for 3DS 2.
      enum:
      - MD
      - threeDSSessionData


    three_ds.message_extension:
      type: string
      description: Scheme specific data elements used to to carry additional data. Message extension is sent based on rules set by each scheme and may not always be present in the response.
    


      
    time_updated:
      type: string
      format: date-time
      description: Global Payments time indicating when the object was last updated in ISO-8601 format.
      example: 2020-05-03T21:23:39.718Z

    time_created:
      type: string
      format: date-time
      description: Global Payments time indicating when the object was created in ISO-8601 format.
      example: 2020-05-03T21:23:39.718Z

    to_time_created:
      description: The end time to search for in a range, using the resource time_created value.
      type: string
      format: date
      example: '2020-11-11'

    transaction.amount:
      type: string
      description:  The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomiation of the related currency.
      example: '11099'
   
    transaction.gratuity_amount:
      type: string
      description: The amount of the gratuity for a transaction.It is always represented in the lowest denomiation of the related currency.
      example: '1999'

    transaction.cashback_amount:
      type: string
      description: The amount of the transaction that relates to cashback.It is always represented in the lowest denomiation of the related currency.
      example: '2000'
    
    transaction.surcharge_amount:
      type: string
      description: The amount that reflects the additional charge the merchant applied to the transaction for using a specific payment method.It is always represented in the lowest denomiation of the related currency.
      example: '150'
    
    transaction.convenience_amount:
      type: string
      description: The amount that reflects the charge the merchant applied to the transaction for availing of a more convenient purchase.It is always represented in the lowest denomiation of the related currency.
      example: '120'
    
    transaction.description:
      type: string
      description: Merchant defined field to describe the transaction.
      example: 'SKU#BLK-MED-G123-GUC'
      maxLength: 100

    transaction.id:
      type: string
      description: A unique identifier generated by Global Payments to identify
            the transaction.
      example: 'TRN_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d'
      minLength: 4
      maxLength: 100



    transaction.reference:
      type: string
      description: Merchant defined field to reference the transaction.
      minLength: 8
      maxLength: 50

    transaction.type:
      type: string
      description: Describes whether the transaction is a SALE, that moves funds
            from Payer to Merchant, or a REFUND where funds move from Merchant to Payer.
      example: 'SALE'
      default: 'SALE'
      enum:
      - SALE
      - REFUND

    account.type:
      type: string
      description: Describes what capablity the account relates to be it transaction processing, data services, dispute management, merchant management,tokenization.
        * `TRANSACTION_PROCESSING` - indicates an account that can be used to create and manage transactions.
        * `DATA_SERVICES` - indicates an account that can be used to retrieve data.
        * `DISPUTE_MANAGEMENT` - indicates an account that can be used to manage transaction disputes.
        * `TOKENIZATION` - indicates an account that can be used to store and manage payment methods securely.
        * `MERCHANT_MANAGEMENT` - indicates an account that can be used to store and manage merchants and their accounts.

      enum:
      - TRANSACTION_PROCESSING
      - DATA_SERVICES
      - DISPUTE_MANAGEMENT
      - MERCHANT_MANAGEMENT
      - TOKENIZATION

    total_amount:
      type: string
      description: The total amount across one or more items.
      example: '120'

    #### X
    X-GP-Version:
      description: Indicates the version of the GP-API for this message.
      type: string
      default: '2020-12-22'
      minLength: 1
      maxLength: 50    

    X-GP-Idempotency:
      description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
      type: string
      minLength: 1
      maxLength: 50

    X-GP-Signature:
      description: The signature of the notification message to the merchant's URL endpoint. Use this value to validate that the notification came from Global Payments.
      maxLength: 1000
      minLength: 1
      type: string
      example: '6bb6116d85c2326feb32dc34ded531ed80c6f04ac472fa0c7e8228fde0fe7d66195128c5d52f266398471bcdbaa7d09a7d88495ce998e48da34877d6fd530f0b'

    Accept-Encoding:
      description: Compression algorithm user can accept in the response to this request.
      default: 'gzip'

      
    Content-Encoding:
      description: Indicates if the message is compressed and using what compression mechanism.
      type: string
      default: 'gzip'


    Authorization:
      description: Bearer access token value used to access the API.
      type: string
      default: 'Bearer 8iZjQyEQeriGfqtA1V5wVDagEMAI'
      example: 'Bearer 8iZjQyEQeriGfqtA1V5wVDagEMAI'
    

    Accept:
      description:  Expected format of the response message.
      type: string
      default: 'application/json'
      example: 'application/json'

    Content-Type:
      description: Indicates the format of the message.
      type: string
      default: 'application/json'


     
    xid:
      type: string
      description: The unique identifier for the 3D Secure details obtained for this transaction.
      example: 'vJ9NXpFueXsAqeb4iAbJJbe+66s='
      minLength: 0
      maxLength: 50

##################################

    mac:
      type: string
      description: A message authentication code submitted to confirm integrity of the request.
      minLength: 1
      maxLength: 50

    authentication.cavv_result:
      type: string
      description: The card brand result for CAVV/authentication value validation.
      enum:
      - FAILED
      - FAILED_AUTHENTICATION
      - SUCCESS_AUTHENTICATION
      - SUCCESS_ATTEMPT
      - FAILED_ATTEMPT
      - FAILED_NOT_VALIDATED INFO_SUCCESS
      minLength: 1
      maxLength: 50  



    encryption.method:
      type: string
      description: The encryption method used when sending encrypted card data to Global Payments.
      enum:
      - KTB
      - KSN
      minLength: 1
      maxLength: 50

    encryption.version:
      type: string
      description: The version of encryption being used.
      minLength: 1
      maxLength: 50


    card.expiry_year:
      type: string
      description: The 2 digit expiry date year of the card.
      example: '25'
      minLength: 2
      maxLength: 2

    encryption.info:
      type: string
      description: The encryption info used when sending encrypted card data to Global Payments.
      minLength: 1
      maxLength: 2000

    card.number:
      type: string
      description: The the card account number used to authorize the transaction. Also known as PAN.
      example: '4263970000005262'
      minLength: 1
      maxLength: 50

    card.expiry_month:
      type: string
      description: The 2 digit expiry date month of the card.
      example: '05'
      minLength: 2
      maxLength: 2

    card.track:
      type: string
      description: Data from magnetic stripe of a card
      minLength: 1
      maxLength: 500
      
    card.tag:
      type: string
      description: The full card tag data for an EMV/chip card transaction.
      minLength: 1
      maxLength: 2000

    card.chip_condition:
      type: string
      description: Indicates if a fallback mechanism was used to obtain the card information when EMV/chip did not work as expected.
      enum:
      - PREV_SUCCESS
      - PREV_FAILED
      minLength: 1
      maxLength: 50

    card.pin_block:
      type: string
      description: Contains the pin block info, relating to the pin code the Payer entered.
      minLength: 1
      maxLength: 500


    card.cvv:
      type: string
      description: The numeric value printed on the physical card.
      example: '852'
      minLength: 0
      maxLength: 4

    card.cvv_indicator:
      type: string
      description: Card Verification Value Indicator sent by the Merchant indicating the CVV availability.
      example: PRESENT
      minLength: 0
      maxLength: 50
      enum:
      - ILLEGIBLE
      - NOT_PRESENT
      - PRESENT

    card.avs_address:
      type: string
      description: First line of the address associated with the card.
      example: Apt 123
      minLength: 0
      maxLength: 50

    card.avs_postal_code:
      type: string
      description: Postal code of the address associated with the card.
      example: TGX562
      minLength: 0
      maxLength: 50

    card.funding:
      type: string
      description: Indicates whether the card is a debit or credit card.
      enum:
      - DEBIT
      - CREDIT
      default: CREDIT
      minLength: 0
      maxLength: 50

    card.authcode:
      type: string
      description: Code generated when the card is successfully authorized.
      minLength: 0
      maxLength: 50

    card.brand_reference:
      type: string
      description: The unique reference created by the brands/schemes to uniquely identify the transaction.
      minLength: 0
      maxLength: 50


    card.masked_number_last4:
      type: string
      description: 'Masked card number with last 4 digits showing.'
      minLength: 12
      maxLength: 50

    card.number_first6:
      type: string
      description: 'First 6 digits of card number'
      minLength: 6
      maxLength: 6
    
    card.number_last4:
      type: string
      description: 'Last 4 digits of card number'
      minLength: 4
      maxLength: 4

    digital_wallet.token_first6: ## REVISIT WHETHER we Kept this under Card
      type: string
      description: 'First 6 digits of digital wallet token'
      minLength: 6
      maxLength: 6

    
    digital_wallet.token_last4:
      type: string
      description: 'Last 4 digits of digital wallet token'
      minLength: 4
      maxLength: 4


    card.tag_response:
      type: string
      description: The card EMV tag response data from the card issuer for a contactless or chip card transaction.
      minLength: 0
      maxLength: 50

    card.brand:
      type: string
      description: Indicates the card brand that issued the card.
      enum:
      - VISA
      - MASTERCARD
      - AMEX
      - DINERS
      - DISCOVER
      - JCB
      - CUP
      minLength: 0
      maxLength: 50


    card.brand_time_reference:
      type: string
      description: The time returned by the card brand indicating when the transaction was processed on their system.
      minLength: 0
      maxLength: 50

    transaction.time_created_reference:
      type: string
      description: Merchant's time indicating when the transaction was first created. Value is in ISO-8601 format.

    card.cvv_result:
      type: string
      description: The result of the CVV check.
      minLength: 0
      maxLength: 50
      enum:
      - MATCHED
      - NOT_MATCHED
      - NOT_CHECKED

    card.avs_address_result:
      type: string
      description: The result of the AVS address check.
      minLength: 0
      maxLength: 50
      enum:
      - MATCHED
      - NOT_MATCHED
      - NOT_CHECKED


    card.avs_postal_code_result:
      type: string
      description: The result of the AVS postal code check.
      minLength: 0
      maxLength: 50
      enum:
      - MATCHED
      - NOT_MATCHED
      - NOT_CHECKED


    card.avs_action:
      type: string
      description: The recommended AVS action to be taken by the agent processing the card transaction.
      minLength: 0
      maxLength: 50
      enum:
      - PROMPT
      - DECLINE
      - ACCEPT


    digital_wallet.token:
      type: string
      description: A token that represents, or is the payment method, stored with  the digital wallet.  
      minLength: 1
      maxLength: 50

    digital_wallet.token_format:
      type: string
      description: Indicates if the actual card number or a token is being used to process the transaction.
      minLength: 1
      maxLength: 50
      enum:
      - CARD_NUMBER
      - CARD_TOKEN

    digital_wallet.cryptogram:
      type: string
      description: The authentication value use to verify the validity of the digit wallet transaction.
      minLength: 1
      maxLength: 50


    digital_wallet.provider:
      type: string
      description: Identifies who provides the digital wallet for the Payer.
      minLength: 1
      maxLength: 50
      enum:
      - APPLEPAY
      - PAY_BY_GOOGLE



    stored_credential.model:
      type: string
      description: Indicates the transaction processing model being executed when using stored credentials.
      minLength: 1
      maxLength: 50
      enum:
      - UNSCHEDULED
      - RECURRING
      - SUBSCRIPTION
      - INSTALLMENT
      - MAINTAIN_PAYMENT_METHOD
      - MAINTAIN_PAYMENT_VERIFICATION

    stored_credential.reason:
      type: string
      description: The reason stored credentials are being used to to create a transaction.
      enum:
      - INCREMENTAL
      - RESUBMISSION
      - REAUTHORIZATION
      - DELAYED
      - NO_SHOW
      minLength: 1
      maxLength: 50

    stored_credential.sequence:
      type: string
      description: Indiciates the order of this transaction in the sequence of a planned repeating transaction processing model.
      minLength: 1
      maxLength: 50
      enum:
      - FIRST
      - SUBSEQUENT
      - LAST

    installment.program:
      type: string
      description: The installment payment plan program.
      enum:
      - SIP
      - mSIP
      - HSBC

    installment.id:
      type: string
      description: The unique reference to identify the payment plan term details.

    installment.time_unit:
      type: string
      description: The unit of time that represents the frequency of the installment payment plan.
      enum:
      - DAY
      - MONTH
      - YEAR

    installment.time_unit_number:
      type: string
      description: The total number of payments to be made over the course of the installment payment plan.

    installment.term:
      description: Information returned about an installment payment plan.

    installment.interest_rate:
      type: string
      description: The interest paid on the installment payment plan by the payer.

    installment.first_amount:
      type: string
      description: The amount of the first transaction in the plan.

    installment.subsequent_amount:
      type: string
      description: The amounts of the subsequent transactions in the plan.

    installment.last_amount:
      type: string
      description: The amount of the final transaction in the plan.

    installment.total_amount:
      type: string
      description: The total amount the payer pays over the course of the plan.


    apm.provider:
      type: string
      description: A string used to identify the payment method being used with the transaction.
      enum:
      - TESTPAY
      - PAYPAL
      - SOFORT
      - IDEAL
      - GIROPAY
  
    transaction.payer_reference:
      type: string
      description: The merchant's payer reference for the transaction
      example: CUST_12345
      minLength: 0
      maxLength: 50
    
    transaction.user_reference:
      type: string
      description: The merchant's user reference for the transaction. This represents the person who processed the transaction on the merchant's behalf like a clerk or cashier reference.
      example: EMP_234235
      minLength: 0
      maxLength: 50
    
    transaction.tax_exempt_status:
      type: string
      description: Indicates if the transaction is exempt from tax or not.
      minLength: 0
      enum:
        - TAX_EXEMPT
        - NOT_EXEMPT

    market.restaurant.ticket_reference:
      type: string
      description: A merchant defined ticket reference for an order in a restaurant.
      minLength: 0
      maxLength: 50

    market.restaurant.guest_reference:
      type: string
      description: A merchant defined reference for a guest or guests in a restaurant.
      minLength: 0
      maxLength: 50

    market.restaurant.table_reference:
      type: string
      description: A merchant defined reference for the table in a restaurant relating to the transaction.
      minLength: 0
      maxLength: 50


    apm.provider_payer_reference:
      type: string
      description: The payer reference from the payment method provider.
      example: CUST_12345

    apm.description: 
      description: Data associated with an APM.
      type: string

    apm.provider_transaction_reference:
      type: string
      description: The reference the payment method provider created for the transaction.
      example: 49wnfs9w434234
      
    apm.provider_time_created:
      type: string
      description: The time the payment method provider created the transaction at on their system.
      example: 49wnfs9w434234

    apm.provider_payer_name:
      type: string
      description: A name of the payer from the payment method system.
      example: James Mason

    apm.name:
      type: string
      description: The name of the owner of the payment method.

    apm.mandate.reference:
      type: string
      description: The reference to identify the mandate.

    apm.redirect_url:
      type: string
      description: URL to redirect the payer from the merchant's system to the payment method's system.

    apm.session_token:
      type: string
      description: A string generated by the payment method to represent the session created on the payment method's platform to facilitate the creation of a transaction.
      example: EC-0SR89134FA420913U

    apm.fund_status: ##REVISIT ## enums to external docs ##
      type: string
      description: 'A string generated by the payment method that represents to what degree the merchant is funded for the transaction. '
      example: RECEIVED
      enum:
      - NOT_EXPECTED
      - RECEIVED
      - WAITING
      - MISSING


    apm.wait_notification:
      minimum: 0
      maximum: 1
      type: number
      description: Indicates to instruct the payer to wait for an update at the time the transaction is being executed or that an update will be given later.
      example: 0
      enum:
        - 0
        - 1

    apm.optional_redirect:
      minimum: 0
      maximum: 1
      type: number
      description: Indicates that a redirect to the payment method is not required. Some payment methods (for example, SEPA DirectDebit) provide the option to redirect the customer to a page to display additional information about the payment.
      example: 0
      enum:
        - 0
        - 1

    apm.payment_description:
      type: string
      description: The reference the payment method provider created for the transaction.
      example: 49wnfs9w434234

    apm.confirmed_accountholder:
      type: string
      description: A name of the payer from the payment method system.
      example: Jimmy Nail
      default: Jimmy Nail

      
    bank.name:
      type: string
      description: The name of the bank.
      example: High Street Bank

    bank.identifier_code:
      type: string
      description: The international identifier code for the bank.

    bank.iban:
      type: string
      description: The international identifier of the bank account.

    bank.masked_account_number_last4:
      type: string
      description: The last 4 characters of the local reference for a bank account number.
    
    bank.account_number:
      type: string
      description: The number or references to a bank account.


    parent_resource_id:
      type: string
      description: An identifier generated by Global Payments to uniquely identify the parent resource of this resource. This is resource that was used to create the current instance.

    create_action_id:
      type: string
      description: An identifier generated by Global Payments to uniquely identify the action that created this resource.
      
      

    notifications.return_url:
      example: 'https://www.example.com/notifications/return'
      type: string
      description: The merchant URL to return the payer to, once the payer has completed payment using the payment method. This returns control of the payer's payment experience to the merchant.

    notifications.decoupled_challenge_return_url:
      example: 'https://www.example.com/notifications/return'
      type: string
      description: The merchant URL that will receive the notification when the customer has completed the authentication when the authentication is decoupled and separate to the purchase.

    notifications.challenge_return_url:
      example: 'https://www.example.com/notifications/return'
      type: string
      description: The merchant URL that will receive the notification when the customer has completed the authentication.

    notifications.status_url:
      example: 'https://www.example.com/notifications/status'
      type: string
      description: The merchant URL to notify the merchant of the latest status of the transaction.
      
    
    notifications.three_ds_method_return_url:
      type: string
      description: The merchant URL that will receive the notification when the 3DS ACS successfully gathers device information and to close the hidden iFrame accordingly. 
      example: 'https://www.example.com/notifications/3DS_method_complete'

    payment_method.result:
      type: string
      description: Result code from the payment method provider.

    payment_method.message:
      type: string
      description: Result message from the payment method provider corresponding to the result code.

    device.time:
      type: string
      description: The time from the device in ISO8601 format

    device.sequence_number:
      type: string
      description: The sequence number from the device used to align with processing platform.

    device.description:
      type: string
      description: Data relating to a device used to facilitate the transaction.

    device.gratuity_prompt_mode:
      type: string
      description: Describes whether a device prompts a payer for a gratuity when the payer is entering their payment method details to the device.
      example: PROMPT
      enum:
      - PROMPT
      - NOT_REQUIRED
      minLength: 1
      maxLength: 50
    
    device.print_receipt_mode:
      type: string
      description: Describes the receipts a device prints when processing a transaction.
      example: BOTH
      enum:
      - NONE
      - PAYER
      - MERCHANT
      - BOTH
      minLength: 1
      maxLength: 50
    
    device.entry_modes:
      type: array
      items:
        type: string
        description: Describes the allowed entry modes to obtain payment method information from the payer as part of a transaction request.
        example: CHIP
        enum:
        - CHIP
        - CONTACTLESS
        - MANUAL
        - SWIPE
        minLength: 1
        maxLength: 50

    bank_name:
      type: string
      description: The name of the bank.
      example: High Street Bank

    bank_address:
      type: string
      description: The address of the bank.
      example: Bond St. America

    dispute.id:
      type: string
      description: Unique identifier for the Dispute on the Global Payments system.
      example: 'DIS_lskdnfosdfjsdfsdf23dasd'
      minLength: 1
      maxLength: 50

    dispute.status: ##REVISIT ## enums to external docs ##
      type: string
      description: Indicated where the dispute is in the lifecycle.
      example: WITH_MERCHANT
      enum:
      - UNDER_REVIEW
      - WITH_MERCHANT
      - CLOSED
      minLength: 1
      maxLength: 50


    dispute.status_time_created:
      type: string
      format: date-time
      description: Time the current Dispute status was created.
      example: 2020-02-22T10:24:43.999Z

    dispute.stage:
      type: string
      description: Describes where the Dispute is in its' lifecycle.
      example: SECOND_CHARGEBACK
      enum:
      - RETRIEVAL
      - CHARGEBACK
      - REVERSAL
      - SECOND_CHARGEBACK
      - PRE_ARBITRATION
      - ARBITRATION
      - PRE_COMPLIANCE
      - COMPLIANCE
      - GOODFAITH
      minLength: 1
      maxLength: 50


    dispute.stage_time_created:
      type: string
      format: date-time
      description: Time the current Dispute stage was created.
      example: 2020-02-22T10:24:43.999Z

    dispute.amount:
      type: string
      description: The current amount the merchant is liable for the dispute.
      example: '1999'

    dispute.payer_amount:
      type: string
      description: The amount the payer is disputing in the payer's currency.
      example: '1999'

    dispute.payer_currency:
      $ref: 'data_dictionary.v1.yaml#/components/schemas/currency'

    dispute.merchant_amount:
      type: string
      description: The amount the payer is disputing in the merchant's currency.
      example: "1999"
      
    dispute.merchant_currency:
      $ref: 'data_dictionary.v1.yaml#/components/schemas/currency'
    
    transaction.merchant_amount:
      type: string
      description: The amount of the transaction in the merchant's currency
      example: "1999"

    transaction.discount_amount:
          type: string
          description: The discount amount of the transaction in the currency the transaction was captured in.
          example: "199"
    
    transaction.merchant_discount_amount:
          type: string
          description: The discount amount of the transaction in the currency the merchant gets funded in
          example: "299"

    dispute.reason_code:
      type: string
      description: A code indicating the reason for the dispute.
      example: NON_DELIVERY
      enum:
      - FRAUD
      - NON_DELIVERY
      - GOODS_BROKEN...
      minLength: 1
      maxLength: 50

    dispute.reason_description:
      type: string
      description: 'Textual explanation of the reason for the dispute.'
      minLength: 1
      maxLength: 500



    dispute.time_to_respond_by:
      type: string
      format: date-time
      description: The time the merchant needs to respond to the dispute by.
      example: 2020-02-22T10:24:43.761Z

    dispute.result:
      type: string
      description: 'Indicates the result of the dispute.'
      enum:
      - PENDING
      - FULFILLED
      - WON
      - LOST
      - ACCEPTED
      minLength: 1
      maxLength: 50



    dispute.investigator_comment:
      type: string
      description: Last comment submitted for this dispute.




    dispute.last_adjustment_amount:
      type: string
      description: The last amount the merchant has been financially impacted by this Dispute.
      example: "1999"

    dispute.last_adjustment_currency:
      $ref: 'data_dictionary.v1.yaml#/components/schemas/currency'

    dispute.last_adjustment_time_created:
      type: string
      description: Time the last adjustment was created.
      example: 2020-02-22T10:24:43.761Z


    dispute.net_financial_amount:
      type: string
      description: The total amount the Merchant has been financially impacted by this Dispute.
      example: "1999"


    dispute.net_financial_currency:
      $ref: 'data_dictionary.v1.yaml#/components/schemas/currency'


    dispute.net_financial_funding:
      type: string
      description: Indicates if the total amount impacted is a Debit or Credit to Merchant's bank account.
      example: DEBIT
      enum:
      - DEBIT
      - CREDIT
      - NONE

    dispute.payment_method_provider.comment:
      type: string
      description: A comment in relation to the dispute from the payment method provider.
      example: Payer never got the goods


    dispute.payment_method_provider.reference:
      type: string
      description: The payment method provider's reference for the dispute.
      example: CASE_NO_23423863

    dispute.reference:
      type: string
      description: Merchant defined field to reference the Transaction.
      example: MY-TRANS-20190924123456

    dispute.remarks:
      type: string
      description: Merchant field to document remarks about the original Transaction.
      example: MY-TRANS-REMARKS


    deposit.funding_type:
      type: string
      description: Indicates if the Deposit was a debit or credit to the merchant's bank account.
      example: CREDIT
      enum:
      - DEBIT
      - CREDIT

    dispute.last_adjustment_funding:
      type: string
      description: Indicates if the total amount impacted is a Debit or Credit to merchant's bank account.
      example: DEBIT
      enum:
      - DEBIT
      - CREDIT
      - NONE
      minLength: 1
      maxLength: 50

    merchant_time_created:
      type: string
      description: The time the merchant set when the transaction was processed   when the Transaction was first created.

    masked_number_first6last4:
      type: string
      description: The masked card account number, showing the first 6 and the last 4 digits.

    transaction.arn:
      type: string
      description: ARN ot Acquirer Reference Number is a Global Payments created reference sent to the card brands to identify transactions.
      minLength: 1
      maxLength: 50


    document.id:
      type: string
      description: Unique identifier for the document on the Global Payments system
      example: DOC_lskdnfosdfjsdfsdf23dasd
      minLength: 1
      maxLength: 50


    document.b64_content:
      type: string
      description: The document represented as a base64 encoded string.
      example: R0lGODlhigPCAXAAACwAAAAAigPCAYf///8AQnv
      minLength: 1
      maxLength: 100000


    action.resource:
      type: string
      description: The type of resource the action relates to.
      minLength: 1
      maxLength: 50


    action.resource_id:
      type: string
      description: A unique identifier generated by Global Payments to identify  the resource related to this action.
      example: TRN_cf4e1008-c921-4096-bec9-2372cb9476d8
      minLength: 1
      maxLength: 50


    action.resource_parent_id:
      type: string
      description: A unique identifier used to identify the parent resource that the action relates to.
      example: TRN_sdfklj43sf-c921-4096-bec9-2372cb949324a
      minLength: 1
      maxLength: 50


    action.resource_status: ##REVISIT ## enums to external docs ##
      type: string
      description: The status of the resource after the action was executed.
      example: REVERSED
      minLength: 1
      maxLength: 50


    action.resource_request_url:
      type: string
      description: The URL used to execute this action.
      example: /transactions?from_time_created=2019-01-01&from_deposit_time_created=2019-01-01&page_size=1000&page=1&order=DESC
      minLength: 1
      maxLength: 1000


    action.version:
      type: string
      description: The version of the API the action executed against.
      minLength: 1
      maxLength: 50


    action.http_response_code:
      type: string
      description: The HTTP result of the action
      minLength: 1
      maxLength: 50


    action.response_code:
      type: string
      description: The result of the action
      minLength: 1
      maxLength: 50

    action.response_detailed_code:
      type: string
      description: The detailed result code of the action
      minLength: 1
      maxLength: 50



    action.response_detailed_message:
      type: string
      description: The description of the detailed result code returned
      minLength: 1
      maxLength: 50



    action.source_location:
      type: string
      description: Identifies where the action request came from
      minLength: 1
      maxLength: 50



    action.destination_location:
      type: string
      description: Identifies where the action response is sent to
      minLength: 1
      maxLength: 50

    action.message_received:
      type: string
      description: The sanitized HTTP,Header and body of the action request.
      minLength: 1

    action.message_sent:
      type: string
      description: The sanitized HTTP,Header and body of the action response.
      minLength: 1

    action.metrics:
      type: string
      description: A name value pair array of data points to assist with measuring the products usage.
      minLength: 1
      maxLength: 1000

    action.total_time_milliseconds:
      type: number
      description: The time it took from the millisecond the action request hit
        this system to the response was sent back to the integrator.
      minLength: 1
      maxLength: 50

    action.total_time_downstream_milliseconds:
      type: number
      description: The time it took from the millisecond the system passed the
        request onto a third party to the time that system responded.
      minimum: 1
      maximum: 100000

    action.type:
      type: string
      description: The type of action executed.
      example: 'PREAUTHORIZE'
      enum:
      - AUTHORIZE
      - PREAUTHORIZE