openapi: 3.0.1
info:
  title: Transactions
  description: Transactions represent the transfer, or the attempt to transfer funds between the Payer and the Merchant using a specific payment method. A Sale transaction represents movement of funds from Payer to Merchant and a Refund from Merchant to Payer.
  contact:
    name: 'API Integrations'
    url: 'https://developer.globalpay.com/?gp-api=true'
    email: 'api.integrations@globalpay.com'
  version: '2020 10 22'
servers:
  - url: 'https://apis.sandbox.globalpay.com/ucp'
    description: Sandbox Environment
  - url: 'https://apis.globalpay.com/ucp'
    description: Production Environment
tags:
  - name: Get a list of Deposit information
    description:  Get information about the amounts Global Payments affected to merchant's bank account(s).
    externalDocs:
      url: 'https://developer.globalpay.com/settlement-reporting/step-by-step-guide'    
  - name: Get a Single Deposit
    description: Get information about a single amount Global Payments affected to merchant's bank account.
    externalDocs:
      url: 'https://developer.globalpay.com/settlement-reporting/step-by-step-guide'      


paths:
  /transactions:
    post:
      tags:
      - Create
      summary: Create a Sale or Refund transaction that attempts to transfer funds between the Payer and the Merchant using a specific Payment Method. The transaction can be flagged for automatic capture or flagged as requiring a separate capture action later.
      description: Create a Sale or Refund transaction that attempts to transfer funds between the Payer and the Merchant using a specific Payment Method. The transaction can be flagged for automatic capture or flagged as requiring a separate capture action later.

      parameters:
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Authorization      
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Accept
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_request'
        required: true
      
      responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
          
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_response'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400

        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401

        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403

        '404':
          description: Resource Not Found
          content: {}

        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500

        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501

        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502

        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504

        x-codegen-request-body-name: request
    
      callbacks: {}
        
    get:
      tags:
      - Transactions
      summary: Get a list of transactions recently processed, using criteria passed in the query string. Page through the result set to access all records.
      description: Get a list of transactions recently processed, using criteria passedin the query string. Page through the result set to access all records.
      
      parameters:
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Authorization      
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Accept
      
      - $ref: ./models/parameters.v1.yaml#/components/parameters/query_pagination_page
      - $ref: ./models/parameters.v1.yaml#/components/parameters/query_pagination_page_size
      - $ref: ./models/parameters.v1.yaml#/components/parameters/query_pagination_order
      - $ref: ./models/parameters.v1.yaml#/components/parameters/query_pagination_order_by
      
      
      - name: id
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/id
      
      
      - name: type
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.type
      
      - name: channel
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.channel
      
      - name: amount
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.amount
      
      - name: currency
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/currency
      
      - name: number_first6
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.number_first6
      
      - name: number_last4
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.number_last4
      
      - name: token_first6
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/digital_wallet.token_first6
      
      - name: token_last4
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/digital_wallet.token_last4
      
      - name: account_name
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_name
      
      - name: brand
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.brand
      
      - name: brand_reference
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.brand_reference
      
      - name: authcode
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.authcode
      
      - name: reference
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.reference
      
      - name: status
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.status
      
      - name: from_time_created
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/from_time_created
      
      - name: to_time_created
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/to_time_created
      
      - name: country
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/country
      
      - name: batch_id
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/batch_id
      
      - name: entry_mode
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.entry_mode
     
      
      - name: name
        in: query
        schema:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.name
     
     
      responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request
    
  /transactions/{id}:
    get:
      tags:
      - Transaction
      summary: Get a single view of a transaction using the Global Payments transaction id.
      description: Get a single view of a transaction using the Global Payments transaction id.
      parameters:
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Authorization      
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
      - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Accept
      
      - name: id
        in: path
        required: true
        schema:
         $ref: ./models/data_dictionary.v1.yaml#/components/schemas/id

      responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request

  /transactions/{id}/refund:
    post:
      tags:
      - Refund
      summary: Create a Refund transaction from a previous Sale. The payment method
        associated with the original Sale is used to refund the Payer.
      description: Create a Refund transaction from a previous Sale. The payment method
        associated with the original Sale is used to refund the Payer.
      parameters:
      - name: Authorization
        in: header
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-10-22"
      - name: Accept
        in: header
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json
      - name: X-GP-Idempotency
        in: header
        description: Field submitted in the request that is used to ensure idempotency
          is maintained with this action.
        schema:
          type: string
      - name: id
        in: path
        description: This is the Global Payments transaction id returned for the transaction
          when it was first created. It is used to identify the transaction to refund.
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/change_amount_request'
        required: false
      
      responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request

  /transactions/{id}/reversal:
    post:
      tags:
      - Reverse
      summary: Cancel a transaction before it has been sent for funding. transactions
        can be reversed in full or partially reversed. An attempt to restore Payer's
        spending limit is always made. If no amount is included in the request body,
        the full value of the transaction will be reversed.  In timeout scenarios,
        the reference field can be used in place of the id in the URL to execute a
        reversal also.
      description: Cancel a transaction before it has been sent for funding. transactions
        can be reversed in full or partially reversed. An attempt to restore Payer's
        spending limit is always made. If no amount is included in the request body,
        the full value of the transaction will be reversed. In timeout scenarios,
        the reference field can be used in place of the id in the URL to execute a
        reversal also.
      parameters:
      - name: Authorization
        in: header
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-10-22"
      - name: Accept
        in: header
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json
      - name: Content-type
        in: header
        description: Format of the message.
        required: true
        schema:
          type: string
          default: application/json
      - name: X-GP-Idempotency
        in: header
        description: Field submitted in the request that is used to ensure idempotency
          is maintained with this action.
        schema:
          type: string
      - name: id
        in: path
        description: This is the Global Payments transaction id returned for the transaction
          when it was first created.  It can also be the reference field submitted
          in the request by the user. This is to cater for timeout scenarios when
          the transaction id was never received.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change_amount_request'
        required: false
        responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request

  /transactions/{id}/capture:
    post:
      tags:
      - Capture
      summary: Capture a Sale transaction that has a status of PREAUTHORIZED to receive
        funds for that transaction.
      description: Capture a Sale transaction that has a status of PREAUTHORIZED to
        receive funds for that transaction.
      parameters:
      - name: Authorization
        in: header
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-10-22"
      - name: Accept
        in: header
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json
      - name: Content-type
        in: header
        description: Format of the message.
        required: true
        schema:
          type: string
          default: application/json
 
      - name: X-GP-Idempotency
        in: header
        description: Field submitted in the request that is used to ensure idempotency
          is maintained with this action.
        schema:
          type: string
      - name: id
        in: path
        description: This is the Global Payments transaction id returned for the transaction
          when it was first created.  It is used to identify the transaction to capture.
        required: true
        schema:
          type: string
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change_amt_tag_request'
        required: false
      responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request

      x-codegen-request-body-name: request
 
  /transactions/{id}/adjustment:
    post:
      tags:
      - Adjust
      summary: Adjust an existing transaction. Use this action to change data about a transaction before it is batched. This action does not change the status of a transaction, only the data it contains.
      description: Adjust an existing transaction. Use this action to change data about a transaction before it is batched. This action does not change the status of a transaction, only the data it contains.
      parameters:
      - name: Authorization
        in: header
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-10-22"
      - name: Accept
        in: header
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json
      - name: Content-type
        in: header
        description: Format of the message.
        required: true
        schema:
          type: string
          default: application/json
 
      - name: X-GP-Idempotency
        in: header
        description: Field submitted in the request that is used to ensure idempotency is maintained with this action.
        schema:
          type: string
      - name: id
        in: path
        description: This is the Global Payments transaction id returned for the transaction when it was first created.  It is used to identify the transaction to adjust.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change_amt_tag_request'
        required: false
      responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request

  /transactions/{id}/reauthorization:
    post:
      tags:
      - ReAuth
      summary: This action be to used to refresh the authorization associated with a transaction to get a more recent authcode or reauthorize a transaction reversed in error.
      description: This action be to used to refresh the authorization associated with a transaction to get a more recent authcode or reauthorize a transaction reversed in error.
      parameters:
      - name: Authorization
        in: header
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-10-22"
      - name: Accept
        in: header
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json
      - name: Content-type
        in: header
        description: Format of the message.
        required: true
        schema:
          type: string
          default: application/json
 
      - name: X-GP-Idempotency
        in: header
        description: Field submitted in the request that is used to ensure idempotency is maintained with this action.
        schema:
          type: string
      - name: id
        in: path
        description: This is the Global Payments transaction id returned for the transaction when it was first created.  It can also be the reference field submitted in the request by the user. This is to cater for timeout scenarios when the transaction id was never received.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/change_amount_request'
        required: false
        responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
          
      x-codegen-request-body-name: request

  /transactions/{id}/confirmation:
    post:
      tags:
      - Confirm
      summary: For certain transactions created using non-card based payment methods (for example, PayPal), merchants are required to confirm that the transaction has completed  in order for funds to be funds to be transferred.
      description: For certain transactions created using non-card based payment methods (for example, PayPal), merchants are required to confirm that the transaction has completed  in order for funds to be funds to be transferred.
      parameters:
      - name: Authorization
        in: header
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-10-22"
      - name: Accept
        in: header
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json
      - name: Content-type
        in: header
        description: Format of the message.
        required: true
        schema:
          type: string
          default: application/json

      - name: X-GP-Idempotency
        in: header
        description: Field submitted in the request that is used to ensure idempotency is maintained with this action.
        schema:
          type: string
      - name: id
        in: path
        description: This is the Global Payments transaction id returned for the transaction when it was first created.  It is used to identify the transaction to capture.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/confirm_request'
        required: false
      responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request

  /settlement/transactions:
    get:
      tags:
      - Transactions
      summary: Get a list of funded transactions using filter criteria passed in the query string. Page through the result set to access all records.
      description: Get a list of transactions using criteria passed in the query string. Page through the result set to access all records.
      parameters:
      - name: Authorization
        in: header
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs
      - name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-10-22"
      - name: Accept
        in: header
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json
 
      - name: page
        in: query
        description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
        schema:
          maximum: 1000
          minimum: 1
          type: number
          default: 1
      - name: page_size
        in: query
        description: The total number of objects to return in a single page for that list
        schema:
          maximum: 1000
          minimum: 1
          type: number
          default: 5
      - name: order_by
        in: query
        description: 'The value to order the entire list by. '
        schema:
          type: string
          enum:
          - TIME_CREATED
          - STATUS
          - TYPE
          - DEPOSIT_ID
      - name: order
        in: query
        description: The direction of the ordering of the entire list, ASC or DESC
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: number_first6
        in: query
        description: The first 6 of a card number
        schema:
          type: string
      - name: number_last4
        in: query
        description: 'The last 4 of a card number    '
        schema:
          type: string
      - name: deposit_status
        in: query
        description: 'Search for Deposits that have a status of FUNDED, SPLIT_FUNDING,DELAYED, RESERVED, IRREG or RELEASED.'
        schema:
          type: string
          enum:
          - FUNDED
          - SPLIT_FUNDING
          - DELAYED
          - RESERVED
          - IRREG
          - RELEASED
      - name: account_name
        in: query
        description: A unique identifier that identifies the account the search is being executed against.
        required: true
        schema:
          type: string
          default: Settlement Reporting
      - name: brand
        in: query
        description: Indicates the card brand that issued the card.
        schema:
          type: string
          enum:
          - VISA
          - MASTERCARD
          - AMEX
          - DINERS
          - DISCOVER
          - JCB
      - name: arn
        in: query
        description: Search by the full arn
        schema:
          type: string
      - name: brand_reference
        in: query
        description: Search by the brand reference returned at the time of the transaction
        schema:
          type: string
      - name: authcode
        in: query
        description: Search by the authcode
        schema:
          type: string
      - name: reference
        in: query
        description: wildcard search by the reference the merchant submitted with the transaction.
        schema:
          type: string
      - name: status
        in: query
        description: Search for transactions that have a status of FUNDED, REJECTED.
        schema:
          type: string
          enum:
          - INITIATED
          - AUTHENTICATED
          - PENDING
          - DECLINED
          - PREAUTHORIZED
          - CAPTURED
          - BATCHED
          - REVERSED
          - FUNDED
          - REJECTED
      - name: from_time_created
        in: query
        description: The time to search from in a range, using the transaction time created value.
        required: true
        schema:
          type: string
          default: "2020-05-01"
      - name: to_time_created
        in: query
        description: The time to search to in a range, using the transaction time created value.
        schema:
          type: string
      - name: deposit_id
        in: query
        description: 'Identifier that uniquely identifies the Deposit on the Global Payments system. '
        schema:
          type: string
      - name: from_deposit_time_created
        in: query
        description: 'The time to search from in a range, using the time the deposit was created that contains this transaction.'
        schema:
          type: string
      - name: to_deposit_time_created
        in: query
        description: The time to search to in a range, using the time the deposit was created that contains this transaction.
        schema:
          type: string
      - name: from_batch_time_created
        in: query
        description: The time to search from in a range, using the time the batch was created that contains this transaction.
        schema:
          type: string
      - name: to_batch_time_created
        in: query
        description: The time to search to in a range, using the time the batch was created that contains this transaction.
        schema:
          type: string
      - name: system.mid
        in: query
        description: The system merchant identifier.
        schema:
          type: string
      - name: system.hierarchy
        in: query
        description: The system merchant hierarchy
        schema:
          type: string
        responses:
        '200':
          description: OK
          headers:
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-type      
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_Content-Encoding
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Idempotency
          - $ref: ./models/parameters.v1.yaml#/components/parameters/header_X-GP-Version
        
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactions_list'
        '400':
          $ref: ./models/errors.yaml#/components/responses/RequestInvalid_400
        '401':
          $ref: ./models/errors.yaml#/components/responses/AuthenticationInvalid_401
        '403':
          $ref: ./models/errors.yaml#/components/responses/NotAuthorized_403
        '404':
          description: Resource Not Found
          content: {}
        '500':
          $ref: ./models/errors.yaml#/components/responses/ServerError_500
        '501':
          $ref: ./models/errors.yaml#/components/responses/UnknownServerError_501
        '502':
          $ref: ./models/errors.yaml#/components/responses/UnknownPlatformError_502
        '504':
          $ref: ./models/errors.yaml#/components/responses/ServerTimeout_504
        x-codegen-request-body-name: request






components:
 
 
  schemas:

    create_request:
      required:
      - account_name
      - amount
      - channel
      - country
      - currency
      - payment_method
      - reference

      type: object
      properties:
        account_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_name
                                                                               
        type:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.type
          
        channel:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.channel

        country:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/country

        capture_mode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.capture_mode

        remaining_capture_count:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.remaining_capture_count

        authorization_mode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.authorization_mode

        amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.amount
                      
        currency:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/currency
        
        gratuity_amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.gratuity_amount

        cashback_amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.cashback_amount

        surcharge_amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.surcharge_amount

        convenience_amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.convenience_amount

        reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.reference

        description:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.description
        
        language:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/language


        ip_address:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/ip_address
  
        site_reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/site_reference

      
        order_reference:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/order

        initiator:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.initiator          
        stored_credential:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/stored_credential


        payment_method:
          $ref: '#/components/schemas/payment_method_request'
        
       



        installment:
          $ref: '#/components/schemas/installment_request'
               
    create_response:
      type: object
      properties:
        id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.id

        time_created:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/time_created

        type:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.type
        
        status:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.status          
          
        channel:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.channel

        capture_mode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.capture_mode

        ##REVISIT##
        authorization_mode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.authorization_mode

        amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.amount
                      
        currency:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/currency
        
        country:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/country
    
        merchant_id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/merchant_id
        merchant_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/merchant_name
        account_id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_id
        account_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_name
        
        reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.reference
                                                                    
        batch_id:
           $ref: ./models/data_dictionary.v1.yaml#/components/schemas/batch_id
       
        payment_method:
          $ref: '#/components/schemas/payment_method_response'
       
        installment:
          $ref: '#/components/schemas/installment_response'
       
        action:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/action
    
    payment_method_request:
      type: object
      properties:                
        first_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.first_name
        last_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.last_name
        name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.name

        
        entry_mode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.id
        encryption:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/encryption
        authentication:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/authentication
        digital_wallet:
          $ref: '#/components/schemas/digital_wallet'
        apm:
          $ref: '#/components/schemas/apm_request'
        card:
          $ref: '#/components/schemas/card_request'
          
    payment_method_response:
      type: object
      properties:
        result:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.result
        message:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.message
        entry_mode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.entry_mode

        authentication:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/authentication_response
        digital_wallet:
          $ref: '#/components/schemas/digital_wallet'
        apm:
          $ref: '#/components/schemas/apm_response'
        card:
          $ref: '#/components/schemas/card_response'
    
    card_request:
      type: object
      properties:
        number:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.number
        expiry_month:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.expiry_month
        expiry_year:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.expiry_year
        track:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.track
        tag:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.tag
        chip_condition:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.chip_condition
        pin_block:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.pin_block
        cvv:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.cvv
        cvv_indicator:
         $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.cvv_indicator
        avs_address:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.avs_address
        avs_postal_code:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.avs_postal_code
        funding:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.funding
        authcode:
         $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.authcode
        brand_reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.brand_reference
  
    card_response:
      type: object
      properties:
        masked_number_last4:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.masked_number_last4
       
        tag_response:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.tag_response
        authcode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.authcode
        
        brand:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.brand

        brand_reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.brand_reference

        brand_time_reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.brand_time_reference
        
        cvv_result:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.cvv_result

        avs_address_result:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.avs_address_result

        avs_postal_code_result:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.avs_postal_code_result

        avs_action:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.avs_action
         
    digital_wallet:
      type: object
      properties:
        token:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/digital_wallet.token
        token_format:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/digital_wallet.token_format
          
        cryptogram:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/digital_wallet.cryptogram
        provider:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/digital_wallet.provider
        expiry_month:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.expiry_month
        expiry_year:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.expiry_year
        eci:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/eci
        cvv:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.cvv
        cvv_indicator:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.cvv_indicator
        avs_address:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.avs_address
        avs_postal_code:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.avs_postal_code

    ### just amount in the request
    change_amount_request:
      type: object
      properties:
        amount: ##REVISIT - include reference##
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.amount
    change_amt_tag_request:
      type: object
      properties:
        amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.amount
        gratuity_amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.gratuity_amount
        payment_method:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.tag


    existing_transaction_response:
      type: object
      properties:
        id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.id

        time_created:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/time_created

        type:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.type
        
        status:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.status          
          
        amount:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.amount
                      
        currency:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/currency
        
        country:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/country
    
        reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/transaction.reference
                                                                    
        batch_id:
           $ref: ./models/data_dictionary.v1.yaml#/components/schemas/batch_id
       
        payment_method:
          $ref: '#/components/schemas/existing_transaction_payment_method_response'
       
       
        action:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/action
    existing_transaction_payment_method_response:
      type: object
      properties:
        result:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.result
                           
        message:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/payment_method.message
                  
        card:
          $ref: '#/components/schemas/existing_transaction_card_response'
    existing_transaction_card_response:
      type: object
      properties:
        authcode:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.authcode
        brand_reference:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/card.brand_reference
   
    confirm_request:
      type: object
      properties:
        payment_method:
          $ref: '#/components/schemas/payment_method_secondary_apm'
    
    payment_method_secondary_apm:
      type: object
      properties:
        apm:
          $ref: '#/components/schemas/payment_method_secondary_apm_fields'
    payment_method_secondary_apm_fields:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method being used with
            the transaction.
          example: PAYPAL
                 
          enum:
          - PAYPAL
          - SOFORT
          - IDEAL
          - GIROPAY
          - '...'
        provider_payer_reference:
          type: string
          description: The payer reference from the payment method system.
          example: CUST_12345
      description: Data associated with an APM.
 
    confirm_response:
      type: object
      properties:
        payment_method:
          $ref: '#/components/schemas/apm_response_secondary'
    apm_response_secondary:
      type: object
      properties:
        apm:
          $ref: '#/components/schemas/apm_response_secondary_fields'
    apm_response_secondary_fields:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method being used with
            the transaction.
          example: PAYPAL
                 
          enum:
          - PAYPAL
          - SOFORT
          - IDEAL
          - GIROPAY
          - '...'
        provider_transaction_reference:
          type: string
          description: The reference the payment method provider created for the transaction.
          example: 49wnfs9w434234
        provider_time_created:
          type: string
          description: The time the payment method provider created the transaction
            at on their system.
          example: 49wnfs9w434234
        provider_payer_name:
          type: string
          description: A name of the payer from the payment method system.
          example: James Mason
      description: Data associated with the response of an APM transaction.
   


    notifications:
      type: object
      properties:
        return_url:
          example: 'https://www.example.com/notifications/return'
          type: string
          description: The merchant URL to return the payer to, once the payer has completed payment using the payment method. This returns control of the payer's payment experience to the merchant.
        status_url:
          example: 'https://www.example.com/notifications/status'
          type: string
          description: The merchant URL to notify the merchant of the latest status of the transaction.
      description: Indicates to Global Payments where the merchant wants to receive notifications of certain events that occur on the Global Payments system.
    notification_post_response:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier generated by Global Payments to identify
            the Transaction.
          example: "TRN_JOGrqvzOvbLy4V2n7cHsusYy8aainM"
        time_created:
          type: string
          description: Global Payments time indicating when the Transaction was first
            created. Value is in ISO-8601 format and in UTC.
          example: "2020-04-20T13:17:21.914Z"
        type:
          type: string
          description: Describes whether the transaction is a SALE, that moves funds
            from Payer to Merchant, or a REFUND where funds move from Merchant to
            Payer.
          example: SALE
          enum:
          - SALE
          - REFUND
        status:
          type: string
          description: Indicates the current state of the transaction.
          enum:
          - DECLINED
          - PREAUTHORIZED
          - CAPTURED
          - BATCHED
          - REVERSED
          example: CAPTURED
        channel:
          type: string
          description: Describes whether the transaction was processed in a face to
            face(CP) scenario or a Customer Not Present (CNP) scenario.
          example: CP
          enum:
          - CP
          - CNP
        capture_mode:
          type: string
          description: Indicates whether the transaction is to be captured later or
            captured automatically.
          enum:
          - AUTO
          - LATER
          example: "AUTO"
        amount:
          type: string
          description: The amount the transaction can transfer from Payer to Merchant
            for a SALE or vice versa for a REFUND.
          example: "1999"
        currency:
          type: string
          description: The currency of the amount.
          example: USD
          enum:
          - USD
          - CAD
          - SBD
          - EUR
          - JPY- '...'
        country:
          type: string
          description: Indictes whether the Merchant or the Payer initiated the creation
            of a Transaction. In ISO 3166-1(alpha-2 code) format.
          enum:
          - US
          - CA
          - UK
          - '...'
          example: "US"
        merchant_id:
          type: string
          description: A unique identifier generated by Global Payments to identify
            the Merchant.
          example: MER_cf4e1008-c921-4096-bec9-2372cb9476d8
        merchant_name:
          type: string
          description: A meaningful label generated by Global Payments to identify
            the Merchant.
          example: Sandbox_merchant_2
        account_id:
          type: string
          description: A unique identifier generated by Global Payments to identify
            the Merchant's transaction processing configuration.
          example: TRA_cf4e1008-c921-4096-bec9-2372cb9476d8
        account_name:
          type: string
          description: A meaningful label generated by Global Payments to identify
            the Merchant's configuration account.
          example: Transaction_Processing
        reference:
          type: string
          description: Merchant defined field to reference the Transaction.
          example: MY-TRANS-20190924123456
        batch_id:
          type: string
          description: Reference that uniquely identifies the batch the transaction
            is in. Only CAPTURED transactions have a valid batch_id.
          example: ""
        payment_method:
          $ref: '#/components/schemas/payment_method_not_response'
        action:
           $ref: ./models/schema_objects.v1.yaml#/components/schemas/action
    payment_method_not_response:
      type: object
      properties:
        result:
          type: string
          description: IIn payment_method] Result code from the payment method provider.
        message:
          type: string
          description: Result message from the payment method provider corresponding
            to the result code.
        entry_mode:
          type: string
          description: 'Indicates how the payment method information was obtained
            by the Merchant for this Transaction. '
          example: SWIPE
          default: SWIPE
          enum:
          - MOTO
          - ECOM
          - IN_APP
          - CHIP
          - SWIPE
          - MANUAL
          - CONTACTLESS_CHIP
          - CONTACTLESS_SWIPE
        apm:
          $ref: '#/components/schemas/apm_not_response'
 
    device:
      type: object
      properties:
        time:
          type: string
          description: The time from the device in ISO8601 format
        sequence_number:
          type: string
          description: The sequence number from the device used to align with processing
            platform.
      description: Data relating to a device used to facilitate the transaction.
    mandate:
      type: object
      properties:
        reference:
          type: string
          description: The reference to identify the mandate.
          example: REF-MAN-341DE
          default: 'REF-MAN-341DE        '
      description: Data of a mandate between a payment method provider and a payer.
    apm_request:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method being used with
            the transaction.
          example: ""
          enum:
          - PAYPAL
          - SOFORT
          - IDEAL
          - GIROPAY
          - '...'
      description: Data associated with an APM.
  
    apm_response:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method being used with
            the transaction.
          example: PAYPAL
                 
          enum:
          - PAYPAL
          - SOFORT
          - IDEAL
          - GIROPAY
          - '...'
        redirect_url:
          type: string
          description: URL to redirect the payer from the merchant's system to the
            payment method's system.
        session_token:
          type: string
          description: 'A string generated by the payment method to represent the
            session created on the payment method''s platform to facilitate the creation
            of a transaction. '
          example: EC-0SR89134FA420913U
        fund_status:
          type: string
          description: 'A string generated by the payment method that represents to
            what degree the merchant is funded for the transaction. '
          example: RECEIVED
          enum:
          - NOT_EXPECTED
          - RECEIVED
          - WAITING
          - MISSING
        wait_notification:
          maximum: 1
          type: number
          description: 'This field indicates whether it''s appropriate to keep the
            payer waiting for an update at the time the transaction is being executed
            or to indicate to the payer that a update will be given later. '
          example: 0
        optional_redirect:
          maximum: 1
          type: number
          description: 'Indicates that a redirect to the payment method is not required.
            Some payment methods (for example, SEPA DirectDebit) provide the option
            to redirect the customer to a page to display additional information about
            the payment. '
          example: 1
        provider_transaction_reference:
          type: string
          description: The reference the payment method provider created for the transaction.
          example: 49wnfs9w434234
        provider_time_created:
          type: string
          description: The time the payment method provider created the transaction
            at on their system.
          example: 49wnfs9w434234
        provider_payer_name:
          type: string
          description: A name of the payer from the payment method system.
          example: James Mason
                                              
        bank:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/bank_account
        mandate:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/mandate
      description: Data associated with the response of an APM transaction.
    apm_not_response:
      type: object
      properties:
        provider:
          type: string
          description: A string used to identify the payment method being used with
            the transaction.
          example: PAYPAL
          default: PAYPAL
          enum:
          - PAYPAL
          - SOFORT
          - IDEAL
          - GIROPAY
          - '...'
        wait_notification:
          maximum: 1
          type: number
          description: 'This field indicates whether it''s appropriate to keep the
            payer waiting for an update at the time the transaction is being executed
            or to indicate to the payer that a update will be given later. '
          example: 0
        fund_status:
          type: string
          description: 'A string generated by the payment method that represents to
            what degree the merchant is funded for the transaction. '
          example: RECEIVED
          enum:
          - NOT_EXPECTED
          - RECEIVED
          - WAITING
          - MISSING
        payment_description:
          type: string
          description: The reference the payment method provider created for the transaction.
          example: 49wnfs9w434234
        confirmed_accountholder:
          type: string
          description: A name of the payer from the payment method system.
          example: Jimmy Nail
          default: Jimmy Nail
        account_number:
          type: string
          description: The local identifier of the bank account.
        iban:
          type: string
          description: The international identifier of the bank account.
        bank_identifier_code:
          type: string
          description: The international identifier code for the bank.
        bank_name:
          type: string
          description: The name of the bank.
          example: High Street Bank
        bank_address:
          type: string
          description: The address of the bank.
          example: Bond St. America
        optional_redirect:
          maximum: 1
          type: number
          description: 'Indicates that a redirect to the payment method is not required.
            Some payment methods (for example, SEPA DirectDebit) provide the option
            to redirect the customer to a page to display additional information about
            the payment. '
          example: 1
      description: Data associated with an APM.           
       
   
    installment_request:
      type: object
      properties:
        program:
          type: string
          description: The installment payment plan program.
          example: ""
          enum:
          - SIP
          - mSIP
          - HSBC
        term:
          $ref: '#/components/schemas/term_request'
      description: Information to create a transaction that relates to an installment
        payment plan.
    term_request:
      type: object
      properties:
        id:
          type: string
          description: 'The unique reference to identify the payment plan term details.       '
          example: ""
        time_unit:
          type: string
          description: The unit of time that represents the frequency of the installment
            payment plan.
          example: ""
          enum:
          - DAY
          - MONTH
          - YEAR
        time_unit_number:
          type: string
          description: The total number of payments to be made over the course of
            the installment payment plan.
          example: ""
      description: information relating to the terms of the installment payment plan.
    installment_response:
      type: object
      properties:
        program:
          type: string
          description: The transaction processing model that requires the stored credentials.
          enum:
          - SIP
          - mSIP
          - HSBC
        term:
          $ref: '#/components/schemas/term_response'
      description: Information returned about an installment payment plan.
    term_response:
      type: object
      properties:
        id:
          type: string
          description: 'The unique reference to identify the payment plan term details.
            maximum: 50'
        time_unit:
          type: string
          description: The unit of time that represents the frequency of the installment
            payment plan.
          enum:
          - DAY
          - MONTH
          - YEAR
        time_unit_number:
          type: string
          description: 'The total number of payments to be made over the course of
            the installment payment plan.   '
        interest_rate:
          type: string
          description: The interest paid on the installment payment plan by the payer.
        first_amount:
          type: string
          description: The amount of the first transaction in the plan.
        subsequent_amount:
          type: string
          description: The amounts of the subsequent transactions in the plan.
        last_amount:
          type: string
          description: The amount of the final transaction in the plan.
        total_amount:
          type: string
          description: The total amount the payer pays over the course of the plan.
      description: Stored data information used to create a transaction.
   
    
   
    transactions_list:
      type: object
      properties:
        total_record_count:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/pagination.total_record_count
        current_page_size:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/pagination.current_page_size
        merchant_id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/merchant_id
        merchant_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/merchant_name
        account_id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_id
        account_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_name
        filter:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/filter
        paging:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/paging
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/transactions_list_item'
        action:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/action
    transactions_list_item:
      type: object
      properties:
        time_created:
          type: string
          description: Global Payments time indicating when the transaction was first
            created. Value is in ISO-8601 format and in UTC.
        status:
          type: string
          description: Indicates the current state the transaction is in in its life-cycle.
          enum:
          - INITIATED
          - AUTHENTICATED
          - PENDING
          - DECLINED
          - PREAUTHORIZED
          - CAPTURED
          - BATCHED
          - REVERSED
          - FUNDED
          - REJECTED
        type:
          type: string
          description: Describes whether the transaction is a SALE, that moves funds
            from Payer to Merchant, or a REFUND where funds move from Merchant to
            Payer.
          example: SALE
               
          enum:
          - SALE
          - REFUND
        amount:
          type: string
          description: The amount the transaction can transfer from Payer to Merchant
            for a SALE or vice versa for a REFUND.
          example: "1999"
                      
        currency:
          type: string
          description: The currency of the amount.
          example: USD
               
          enum:
          - USD
          - CAD
          - SBD
          - EUR
          - JPY
                        
                        
                      
                                                                                     
                                                  
        merchant_amount:
          type: string
          description: The amount the transaction can transfer from Payer to Merchant
            for a SALE or vice versa for a REFUND.
          example: "2999"
                      
        merchant_currency:
          type: string
          description: The currency of the amount.
          example: EUR
               
          enum:
          - USD
          - CAD
          - SBD
          - EUR
          - JPY
        discount_amount:
          type: string
          description: The discount amount of the transaction in the currency the
            transaction was captured in.
          example: "199"
        discount_currency:
          type: string
          description: The currency of the discount amount.
          example: EUR
          enum:
          - USD
          - CAD
          - SBD
          - EUR
          - JPY
        merchant_discount_amount:
          type: string
          description: The discount amount of the transaction in the currency the
            merchant gets funded in
          example: "299"
        merchant_discount_currency:
          type: string
          description: The currency of the merchant discount amount.
               
          example: EUR
          enum:
          - USD
          - CAD
          - SBD
          - EUR
          - JPY
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          example: MY-TRANS-20190924123456
                                        
        time_created_reference:
          type: string
          description: Merchant's time indicating when the transaction was first created.
            Value is in ISO-8601 format.
        deposit_id:
          type: string
          description: ID that uniquely identifies the Deposit the transaction is
            in. Only FUNDED transactions have a valid deposit_id.
        deposit_time_created:
          type: string
          description: ID that uniquely identifies the Deposit the transaction is
            in. Only FUNDED transactions have a valid deposit_id.
        deposit_status:
          type: string
          description: Status of the deposit the transaction is assigned to.
          enum:
          - FUNDED
          - SPLIT_FUNDING
          - DELAYED
          - RESERVED
          - IRREG
          - RELEASED
        batch_id:
          type: string
          description: Reference that uniquely identifies the batch the transaction
            is in. Only CAPTURED transactions have a valid batch_id.
        batch_time_created:
          type: string
          description: 'The time the batch was created that contains this transaction.  '
        payment_method:
          $ref: '#/components/schemas/payment_method_list_response'
        system:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/system
    payment_method_list_response:
      type: object
      properties:
        entry_mode:
          type: string
          description: Indicates how the payment method information was obtained by
            the Merchant for this transaction.
          example: SWIPE
                  
          enum:
          - MOTO
          - ECOM
          - IN_APP
          - CHIP
          - SWIPE
          - MANUAL
          - CONTACTLESS_CHIP
          - CONTACTLESS_SWIPE
        card:
          $ref: '#/components/schemas/card_list_response'
    card_list_response:
      type: object
      properties:
        brand:
          type: string
          description: Indicates the card brand that issued the card.
          enum:
          - VISA
          - MASTERCARD
          - AMEX
          - DINERS
          - DISCOVER
          - JCB
        authcode:
          type: string
          description: Card Authorization code obtained via another means that forces
            the transaction to be captured and bypasses online authorization when
            creating the transaction.
        arn:
          type: string
          description: Global Payments defined reference for the transaction when
            submitted to payment method provider.
          example: "43634534520190924123456"
                                        
        brand_reference:
          type: string
          description: The reference created by the schemes to uniquely identify the
            transaction on their system.
        masked_number_first6last4:
          type: string
          description: 'Masked card number with first 6 and last 4 digits showing.
            minimum: 12 maximum: 19        '
      description: Data relating to the card payment method returned in a list response.
    
    
    transactions_list_real_time:
      type: object
      properties:
        total_record_count:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/pagination.total_record_count
        current_page_size:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/pagination.current_page_size
        merchant_id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/merchant_id
        merchant_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/merchant_name
        account_id:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_id
        account_name:
          $ref: ./models/data_dictionary.v1.yaml#/components/schemas/account_name
        filter:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/filter
        paging:
          $ref: ./models/schema_objects.v1.yaml#/components/schemas/paging
       
    transactions_list_real_time_item:
      type: object
      properties:
        id:
          type: string
          description: This is the Global Payments transaction id returned for the
            transaction when it was first created.
        time_created:
          type: string
          description: Global Payments time indicating when the transaction was first
            created. Value is in ISO-8601 format and in UTC.
        status:
          type: string
          description: Indicates the current state the transaction is in in its life-cycle.
          enum:
          - INITIATED
          - AUTHENTICATED
          - PENDING
          - DECLINED
          - PREAUTHORIZED
          - CAPTURED
          - BATCHED
          - REVERSED
          - FUNDED
          - REJECTED
        type:
          type: string
          description: Describes whether the transaction is a SALE, that moves funds
            from Payer to Merchant, or a REFUND where funds move from Merchant to
            Payer.
          example: SALE
          enum:
          - SALE
          - REFUND
        channel:
          type: string
          description: Describes whether the transaction was processed in a face to
            face(CP) scenario or a Customer Not Present (CNP) scenario.
          enum:
          - CP
          - CNP
        amount:
          type: string
          description: The amount the transaction can transfer from Payer to Merchant
            for a SALE or vice versa for a REFUND.
          example: "1999"
                      
        currency:
          type: string
          description: The currency of the amount.
          example: USD
               
          enum:
          - USD
          - CAD
          - SBD
          - EUR
          - JPY
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          example: MY-TRANS-20190924123456
        batch_id:
          type: string
          description: Reference that uniquely identifies the batch the transaction
            is in. Only CAPTURED transactions have a valid batch_id.
        country:
          type: string
          description: Indicates whether the Merchant or the Payer initiated the creation
            of a transaction. In ISO 3166-1(alpha-2 code) format.
          enum:
          - US
          - CA
          - UK
          - '...'
        parent_resource_id:
          type: string
          description: An identifier generated by Global Payments to uniquely identify
            the parent resource of this resource.
        create_action_id:
                                
          type: string
          description: An identifier generated by Global Payments to uniquely identify
            the action that created this resource.
        
    payment_method_list_real_time_response:
      type: object
      properties:
        name:
          type: string
          description: The name of the owner of the payment method.
        result:
                                                 
                              
          type: string
          description: Result code from the payment method provider.
        message:
                                          
                                          
          type: string
          description: Result message from the payment method provider corresponding
            to the result code.
        entry_mode:
                       
          type: string
          description: 'Indicates how the payment method information was obtained
            by the Merchant for this transaction. '
          default: SWIPE
          enum:
          - MOTO
          - ECOM
          - IN_APP
          - CHIP
          - SWIPE
          - MANUAL
          - CONTACTLESS_CHIP
          - CONTACTLESS_SWIPE
        card:
          $ref: '#/components/schemas/card_list_real_time_response'
    card_list_real_time_response:
      type: object
      properties:
        brand:
          type: string
          description: Indicates the card brand that issued the card.
          enum:
          - VISA
          - MASTERCARD
          - AMEX
          - DINERS
          - DISCOVER
          - JCB
        authcode:
          type: string
          description: Card Authorization code obtained via another means that forces
            the transaction to be captured and bypasses online authorization when
            creating the transaction.
        brand_reference:
          type: string
          description: The reference created by the schemes to uniquely identify the
            transaction on their system.
        masked_number_first6last4:
          type: string
          description: 'Masked card number with first 6 and last 4 digits showing.
            minimum: 12 maximum: 19'
        masked_number_last4:
          type: string
          description: 'Masked card number with last 4 digits showing. minimum: 12
            maximum: 19 '
        funding:
          type: string
          description: Indicates whether the card payment method is a Debit or Credit
            card.
          enum:
          - DEBIT
          - CREDIT
        cvv_indicator:
          type: string
          description: Card Verification Value Indicator sent by the Merchant indicating
            the CVV availability.
          enum:
          - ILLEGIBLE
          - NOT_PRESENT
          - PRESENT
        cvv_result:
          type: string
          description: The result of the CVV check.
          enum:
          - MATCHED
          - NOT_MATCHED
          - NOT_CHECKED
        avs_address_result:
          type: string
          description: The result of the AVS address check.
          enum:
          - MATCHED
          - NOT_MATCHED
          - NOT_CHECKED
        avs_postal_code_result:
          type: string
          description: The AVS postal code result indicating the result of the postal
            code check.
          enum:
          - MATCHED
          - NOT_MATCHED
          - NOT_CHECKED
      description: Data relating to the card payment method returned in a list response.
    transactions_single_real_time:
      type: object
      properties:
        id:
          type: string
          description: This is the Global Payments transaction id returned for the
            transaction when it was first created.
        time_created:
          type: string
          description: Global Payments time indicating when the transaction was first
            created. Value is in ISO-8601 format and in UTC.
        time_last_updated:
          type: string
          description: Global Payments time indicating when the transaction was last
            updated. Value is in ISO-8601 format and in UTC.
        status:
          type: string
          description: Indicates the current state the transaction is in in its life-cycle.
          enum:
          - INITIATED
          - AUTHENTICATED
          - PENDING
          - DECLINED
          - PREAUTHORIZED
          - CAPTURED
          - BATCHED
          - REVERSED
          - FUNDED
          - REJECTED
        type:
          type: string
          description: Describes whether the transaction is a SALE, that moves funds
            from Payer to Merchant, or a REFUND where funds move from Merchant to
            Payer.
          example: SALE
          enum:
          - SALE
          - REFUND
        merchant_id:
          type: string
          description: A unique identifier generated by Global Payments to identify
            the Merchant.
          example: MER_c4c0df11039c48a9b63701adeaa296c3
        merchant_name:
          type: string
          description: A meaningful label generated by Global Payments to identify
            the Merchant.
          example: Sandbox_merchant_2
        account_id:
          type: string
          description: A unique identifier generated by Global Payments to identify
            the Merchant's transaction processing configuration.
          example: TRA_6716058969854a48b33347043ff8225f
        account_name:
          type: string
          description: A meaningful label generated by Global Payments to identify
            the Merchant's configuration account.
          example: Transaction_Processing
        channel:
          type: string
          description: Describes whether the transaction was processed in a face to
            face(CP) scenario or a Customer Not Present (CNP) scenario.
          enum:
          - CP
          - CNP
        amount:
          type: string
          description: The amount the transaction can transfer from Payer to Merchant
            for a SALE or vice versa for a REFUND.
          example: "1999"
                      
        currency:
          type: string
          description: The currency of the amount.
          example: USD
               
          enum:
          - USD
          - CAD
          - SBD
          - EUR
          - JPY
        reference:
          type: string
          description: Merchant defined field to reference the transaction.
          example: MY-TRANS-20190924123456
        description:
          type: string
          description: Merchant defined field to describe the transaction.
        order_reference:
          type: string
          description: Merchant defined field common to all transactions that are
            part of the same order.
        batch_id:
          type: string
          description: Reference that uniquely identifies the batch the transaction
            is in. Only CAPTURED transactions have a valid batch_id.
        initiator:
          type: string
          description: Indicates whether the Merchant or the Payer initiated the creation
            of a transaction.
          example: PAYER
          enum:
          - PAYER
          - MERCHANT
        country:
          type: string
          description: Indicates the country associated with the transaction.
              
          enum:
          - US
          - CA
          - UK
          - '...'
        language:
          type: string
          description: Indicates the language the transaction was executed in. In
            the format ISO-639(alpha-2) or ISO-639(alpha-2)-ISO-3166(alpha-2)
          enum:
          - en
          - en-US
          - fr
          - fr-CA
        ip_address:
          type: string
          description: 'Indicates the source IP Address of the system used to create
            the transaction. '
        site_reference:
                              
          type: string
          description: 'Indicates the merchant defined reference the represents the
            source location used to create the transaction. '
        parent_resource_id:
                                          
          type: string
          description: An identifier generated by Global Payments to uniquely identify
            the parent resource of this resource.
        create_action_id:
                       
          type: string
          description: An identifier generated by Global Payments to uniquely identify
            the action that created this resource.
        payment_method:
          $ref: '#/components/schemas/payment_method_list_real_time_response'
        system:
           $ref: ./models/schema_objects.v1.yaml#/components/schemas/system
             
    payment_method_single_response:
      type: object
      properties:
        name:
          type: string
          description: The name of the owner of the payment method.
        result:
          type: string
          description: Result code from the payment method provider.
        message:
          type: string
          description: Result message from the payment method provider corresponding
            to the result code.
        entry_mode:
          type: string
          description: 'Indicates how the payment method information was obtained
            by the Merchant for this transaction. '
          example: SWIPE
                  
          enum:
          - MOTO
          - ECOM
          - IN_APP
          - CHIP
          - SWIPE
          - MANUAL
          - CONTACTLESS_CHIP
          - CONTACTLESS_SWIPE
        card:
          $ref: '#/components/schemas/card_list_real_time_response'
    
    
    
    card_list_single_response:
      type: object
      properties:
        brand:
          type: string
          description: Indicates the card brand that issued the card.
          enum:
          - VISA
          - MASTERCARD
          - AMEX
          - DINERS
          - DISCOVER
          - JCB
        authcode:
          type: string
          description: Card Authorization code obtained via another means that forces
            the transaction to be captured and bypasses online authorization when
            creating the transaction.
        brand_reference:
          type: string
          description: The reference created by the schemes to uniquely identify the
            transaction on their system.
        masked_number_first6last4:
          type: string
          description: 'Masked card number with first 6 and last 4 digits showing.
            minimum: 12 maximum: 19'
        masked_number_last4:
          type: string
          description: 'Masked card number with last 4 digits showing. minimum: 12
            maximum: 19 '
        funding:
          type: string
          description: Indicates whether the card payment method is a Debit or Credit
            card.
          enum:
          - DEBIT
          - CREDIT
        cvv_indicator:
          type: string
          description: Card Verification Value Indicator sent by the Merchant indicating
            the CVV availability.
          enum:
          - ILLEGIBLE
          - NOT_PRESENT
          - PRESENT
        cvv_result:
          type: string
          description: The result of the CVV check.
          enum:
          - MATCHED
          - NOT_MATCHED
          - NOT_CHECKED
        avs_address_result:
          type: string
          description: The result of the AVS address check.
          enum:
          - MATCHED
          - NOT_MATCHED
          - NOT_CHECKED
        avs_postal_code_result:
          type: string
          description: The AVS postal code result indicating the result of the postal
            code check.
          enum:
          - MATCHED
          - NOT_MATCHED
          - NOT_CHECKED
      description: Data relating to the card payment method returned in a list response.
   
   