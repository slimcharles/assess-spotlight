
components:
  schemas: 
   request:
      required:
      - app_id
      - grant_type
      - nonce
      - secret
      type: object
      properties:
        nonce:
          type: string
          description: A unique random value included while creating the secret.
          example: random_string
          minLength: 1
          maxLength: 50
        secret:
          type: string
          description: A unique string created using the nonce and app-key. This value
            is used to further authenticate the request. Created as follows - SHA512(NONCE.APP-KEY).
          example: e776ce1d9e94d5072ee132258e446cd92668d7c28b2e475a345319b475ba601956c16e3983926ce279db6301d78b7f47cfb729e41b4169814e373f0a0bf38716
          minLength: 1
          maxLength: 128
        grant_type:
          type: string
          description: Indicates the type of access being requested.
          enum: [client_credentials]
          example: client_credentials
        seconds_to_expire:
          type: integer
          description: |
            The time left in seconds before the token expires.
          maximum: 604799
          example: 604799
        interval_to_expire:
          type: string
          description: |
            The time interval set for when the token will expire.
          enum:
          - WEEK
          - DAY
          - 12_HOURS
          - 6_HOURS
          - 3_HOURS
          - 1_HOUR
          - 30_MINUTES
          - 10_MINUTES
          - 5_MINUTES
        permissions:
            type: array
            items:
              type: string
              description: The list of the permissions the integrator want the access token to have. This is used to limit the authority a specific access token can have.
              example: TRN_POST_Authorize

## Parameters Section
  parameters: ## Parameters Section

  #### HeaderParameters Section      
      header_Accept:
        in: header
        name: Accept
        description: Expected format of the response message.
        schema:
          type: string
          default: application/json

      header_Accept-Encoding:
        name: Accept-Encoding
        in: header
        description: Compression algorithm user can accept in the response to this request.
        schema:
          type: string
          default: gzip
        
      header_Authorization:
        in: header
        name: Authorization
        description: The Bearer token used when executing this action.
        required: true
        schema:
          type: string
          default: Bearer YX06YElOGvuMmj3mtNhmGYVujpCs

      header_Content-type:
        in: header
        name: Content-type
        description: Format of the message.
        required: true
        schema:
          type: string
          default: application/json
      
      header_X-GP-Version:
        name: X-GP-Version
        in: header
        description: Indicates the version of the GP-API for this message.
        required: true
        schema:
          type: string
          default: "2020-04-10"

  #### QueryParameters Section
      query_pagination_page:
        in: query
        name: page
        description: Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.
        schema:
          maximum: 1000
          minimum: 1
          type: number
          default: 1    
      
      query_pagination_page_size:
        in: query
        name: page_size
        description: The total number of objects to return in a single page for that list
        schema:
          maximum: 1000
          minimum: 1
          type: number
          default: 5
      
      query_pagination_order_by:
        in: query
        name: order_by
        description: 'The value to order the entire list by. '
        schema:
          type: string
          enum:
          - TIME_CREATED
      
      query_pagination_order:
        in: query
        name: order
        description: The direction of the ordering of the entire list, ASC or DESC
        schema:
          type: string
          enum:
          - ASC
          - DESC

## Security Section
  securitySchemes:  ## Security Section
    BearerAuth:
      type: http
      scheme: bearer
    



          